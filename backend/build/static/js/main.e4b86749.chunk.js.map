{"version":3,"sources":["LoginDialog.js","axios.js","UploadDialog.js","LensData.js","ProgressPanel.js","LensList.js","redux/index.js","Grading.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["LoginDialog","props","open","onLogin","React","useState","userId","setUserId","errorMsg","setError","login","trim","length","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","value","onChange","evt","target","error","Boolean","onKeyDown","e","keyCode","helperText","DialogActions","Button","onClick","color","axios","create","baseURL","withCredentials","useStyles","makeStyles","theme","fileUpload","backgroundColor","padding","spacing","buttonProgress","position","top","left","marginTop","marginLeft","wrapper","UploadDialog","classes","uploadOpen","handleClose","inFlight","setInFlight","onClose","accept","getRootProps","getInputProps","acceptedFiles","className","map","file","key","path","size","toFixed","Typography","variant","disabled","formData","FormData","forEach","append","name","post","headers","then","catch","CircularProgress","LensData","candidate","setOpen","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","ra","dec","grade","href","url","rel","IconButton","aria-label","Object","entries","JSON","parse","additional","i","val","paper","gap","display","flexDirection","justifyContent","flex","container","ProgressPanel","batch","counts","Box","alignItems","minWidth","width","mr","LinearProgress","_","sum","n_cands","get","params","batch_id","timestamp","Date","getMilliseconds","responseType","res","window","URL","createObjectURL","Blob","data","link","document","createElement","setAttribute","body","appendChild","click","grades","card","paddingLeft","height","LensList","candidates","loadCands","cursor","setCursor","nextUngraded","listRef","createRef","isItemLoaded","useEffect","current","scrollToItem","style","Divider","itemCount","minimumBatchSize","loadMoreItems","start","stop","onItemsRendered","ref","itemSize","r","layout","index","ListItem","button","selected","order","src","alt","createAsyncThunk","thunkAPI","a","dispatch","fetchBatches","success","logout","console","log","batches","fetchCursor","batchId","getState","selectedBatchId","fetchCands","fetchCounts","setGrade","nextCursor","Math","min","dataSlice","actions","setCounts","updateCandidate","setComment","comment","authSlice","createSlice","initialState","reducers","extraReducers","fulfilled","state","action","payload","pending","dataAdapter","createEntityAdapter","getInitialState","selectBatch","findKey","max","keyBy","cand","selectedBatch","authPersistConfig","storage","blacklist","persistConfig","version","rootReducer","combineReducers","auth","reducer","persistReducer","persistedReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","content","palette","background","default","mixins","toolbar","minHeight","leftContainer","rightContainer","lensDataContainer","overflowY","metricContainer","imgListContainer","maxWidth","img","marginRight","connect","submitComment","snackbarOpen","setSnackbarOpen","onKeyPress","includes","parseInt","tabIndex","multiline","onKeyPressCapture","stopPropagation","endIcon","Snackbar","autoHideDuration","elevation","severity","root","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","flexGrow","contentShift","useTheme","setUploadOpen","AppBar","clsx","Toolbar","edge","Drawer","anchor","direction","List","ListItemIcon","ListItemText","primary","subheader","ListSubheader","values","secondary","upload_time","toLocaleString","App","CookiesProvider","loading","CssBaseline","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e4b86749.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField\n} from '@material-ui/core';\n\nexport default function LoginDialog(props) {\n    const {open, onLogin} = props\n    const [userId, setUserId] = React.useState('')\n    const [errorMsg, setError] = React.useState(\"\")\n    const login = () => {\n        if (userId.trim().length === 0) {\n            setError(\"Enter a valid user ID\")\n        } else {\n            onLogin(userId)\n        }\n    }\n    return (\n        <div>\n            <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Log in</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Log in with a user id to save your batches\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"user_id\"\n                        label=\"User ID\"\n                        type=\"text\"\n                        fullWidth\n                        value={userId}\n                        onChange={evt => setUserId(evt.target.value)}\n                        error={Boolean(errorMsg)}\n                        onKeyDown={e => {\n                            if (e.keyCode === 13) login()\n                        }}\n                        helperText={errorMsg}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={login} color=\"primary\">\n                        Login\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import axios from 'axios'\n\nconst isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\nconst baseURL = isDev ? \"http://localhost:5000\" : \"\"\nexport default axios.create({\n    baseURL: baseURL,\n    withCredentials: true\n});","import Dropzone from \"react-dropzone\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n    Typography\n} from \"@material-ui/core\";\nimport axios from \"./axios\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    fileUpload: {\n        backgroundColor: '#f1f1f1',\n        padding: theme.spacing(3)\n    },\n    buttonProgress: {\n        // color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    wrapper: {\n        position: 'relative'\n    }\n}))\n\nexport default function UploadDialog(props) {\n    const classes = useStyles();\n    const {uploadOpen, handleClose} = props;\n    const [inFlight, setInFlight] = React.useState(false);\n\n    return <Dialog open={uploadOpen} onClose={handleClose}>\n        <Dropzone accept={'.csv'}>\n            {({getRootProps, getInputProps, acceptedFiles}) => {\n                return (\n                    <>\n                        <DialogTitle>Upload batches</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <div {...getRootProps({className: classes.fileUpload})}>\n                                    <input {...getInputProps()} />\n                                    {acceptedFiles.length > 0 ?\n                                        acceptedFiles.map(file => (\n                                            <li key={file.path}>\n                                                {file.path} - {(file.size / 1000000).toFixed(2)} Mb\n                                            </li>\n                                        )) :\n                                        <Typography variant='body2'>Click to upload your .csvs</Typography>}\n                                </div>\n                            </div>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button color=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                            <div className={classes.wrapper}>\n                                <Button color=\"primary\"\n                                        disabled={inFlight}\n                                        onClick={() => {\n                                            const formData = new FormData();\n                                            acceptedFiles.forEach((file) => formData.append(file.name, file))\n                                            setInFlight(true)\n                                            axios.post('/upload-batches', formData, {\n                                                headers: {\n                                                    'Content-Type': 'multipart/form-data'\n                                                },\n                                                withCredentials: true\n                                            }).then(() => {\n                                                setInFlight(false)\n                                                handleClose()\n                                            }).catch(() => {\n                                                setInFlight(false)\n                                            })\n                                        }}>\n                                    Upload\n                                </Button>\n                                {inFlight && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                            </div>\n                        </DialogActions>\n                    </>\n                );\n            }}\n        </Dropzone>\n\n    </Dialog>\n}","import React from 'react'\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nexport default function LensData(props) {\n    const {candidate} = props;\n    const [open, setOpen] = React.useState(false);\n\n    return <TableContainer component={Paper}>\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell><b>Parameter</b></TableCell>\n                    <TableCell><b>Value</b></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">RA</TableCell>\n                    <TableCell>{candidate.ra.toFixed(5)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">DEC</TableCell>\n                    <TableCell>{candidate.dec.toFixed(5)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">Grade</TableCell>\n                    <TableCell>{candidate.grade}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">URL</TableCell>\n                    <TableCell><a href={candidate.url} target='_blank'\n                                  rel=\"noopener noreferrer\">Skyviewer</a></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">Additional</TableCell>\n                    <TableCell>\n                        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>{open ?\n                            <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}</IconButton>\n                    </TableCell>\n                </TableRow>\n                {open && Object.entries(JSON.parse(candidate.additional)).map(([key, val], i) =>\n                    <TableRow key={i}>\n                        <TableCell component=\"th\" scope=\"row\">{key}</TableCell>\n                        <TableCell>{val}</TableCell>\n                    </TableRow>\n                )}\n\n            </TableBody>\n        </Table>\n    </TableContainer>\n}","import {Box, Button, LinearProgress, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport axios from './axios'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        gap: `${theme.spacing(1)}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        flex: 1\n    },\n    container: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}))\n\nexport default function ProgressPanel(props) {\n    const classes = useStyles()\n    const {batch, counts} = props\n    return <div className={classes.container}>\n        <Paper className={classes.paper}>\n            <Typography variant='h6'>Batch <i>{batch.name}</i> metrics</Typography>\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box minWidth='125px'>\n                    <Typography variant=\"body2\" color=\"textSecondary\">Grading progress: </Typography>\n                </Box>\n                <Box width=\"100%\" mr={1}>\n                    <LinearProgress variant=\"determinate\" value={_.sum(counts) / batch.n_cands * 100}/>\n                </Box>\n                <Box>\n                    <Typography variant=\"body2\" color=\"textSecondary\">{_.sum(counts)}/{batch.n_cands}</Typography>\n                </Box>\n            </Box>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                A's: {counts[0]} ({(counts[0] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                B's: {counts[1]} ({(counts[1] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                C's: {counts[2]} ({(counts[2] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                D's: {counts[3]} ({(counts[3] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                non-lens: {counts[4]} ({(counts[4] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Button variant='outlined' onClick={() => {\n                axios.get(\"/export_batch\", {\n                    params: {batch_id: batch.id, timestamp: new Date().getMilliseconds()},\n                    withCredentials: true,\n                    responseType: 'blob'\n                }).then(res => {\n                    const url = window.URL.createObjectURL(new Blob([res.data]));\n                    const link = document.createElement('a');\n                    link.href = url;\n                    link.setAttribute('download', `${batch.name}.csv`); //or any other extension\n                    document.body.appendChild(link);\n                    link.click();\n                })\n            }}>Export to CSV</Button>\n        </Paper></div>\n}","import AutoSizer from \"react-virtualized-auto-sizer\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport {FixedSizeList} from \"react-window\";\nimport {Button, Divider, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst grades = ['Grade A', 'Grade B', 'Grade C', 'Grade D', 'Non lens']\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing(1)}px`,\n        paddingLeft: `${theme.spacing(2)}px`,\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    container: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}))\n\nexport default function LensList(props) {\n    const {candidates, batch, loadCands, cursor, setCursor, nextUngraded} = props;\n    const classes = useStyles()\n    const listRef = React.createRef()\n    const isItemLoaded = i => Boolean(candidates[i])\n    React.useEffect(() => {\n        if (listRef.current && cursor >= 0) listRef.current.scrollToItem(cursor, 'center')\n    }, [cursor, listRef])\n    return <Paper className={classes.container}>\n        <Button style={{width: '100%', flex: 0}} onClick={nextUngraded}>Next Ungraded</Button>\n        <Divider/>\n        <div style={{flex: 1}}>\n            <AutoSizer>\n                {({height, width}) => <InfiniteLoader isItemLoaded={isItemLoaded}\n                                                      itemCount={batch.n_cands}\n                                                      minimumBatchSize={20}\n                                                      loadMoreItems={(start, stop) => loadCands({start, stop})}>\n                    {({onItemsRendered, ref}) => (\n                        <FixedSizeList height={height} width={width} itemSize={100} itemCount={batch.n_cands}\n                                       ref={(r) => {\n                                           if (r) {\n                                               ref(r)\n                                               listRef.current = r\n                                           }\n                                       }} onItemsRendered={onItemsRendered} layout=\"vertical\">\n                            {({index: i, style}) => {\n                                return <ListItem key={i} style={style} className={classes.card} button\n                                                 selected={i === cursor} onClick={() => setCursor({cursor: i})}>\n                                    <div>\n                                        {isItemLoaded(i) ? <>\n                                            <Typography variant=\"body1\">\n                                                Cand #{candidates[i].order}\n                                            </Typography>\n                                            <Typography variant=\"body1\"\n                                                        style={{color: candidates[i].grade ? 'green' : 'red'}}>\n                                                {candidates[i].grade ? grades[candidates[i].grade - 1] : 'Ungraded'}\n                                            </Typography>\n                                        </> : <Typography variant=\"body1\">Loading...</Typography>\n                                        }\n\n                                    </div>\n                                    {isItemLoaded(i) && <img src={candidates[i].url} style={{height: '100%'}}\n                                                             alt='Lens preview'/>}\n                                </ListItem>\n                            }}\n                        </FixedSizeList>\n                    )}\n\n                </InfiniteLoader>\n                }\n\n            </AutoSizer>\n        </div>\n    </Paper>\n}","import {\n    combineReducers,\n    configureStore,\n    createAsyncThunk,\n    createEntityAdapter,\n    createSlice,\n    getDefaultMiddleware\n} from \"@reduxjs/toolkit\";\nimport axios from '../axios'\nimport _ from 'lodash'\nimport {FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (userId, thunkAPI) => {\n        const res = await axios.post(\"/login\", {\"user_id\": userId})\n        thunkAPI.dispatch(fetchBatches())\n        return {userId: res.data.success ? userId : null}\n    }\n)\n\nexport const logout = createAsyncThunk(\n    'auth/logout',\n    async (_, thunkAPI) => {\n        const res = await axios.post(\"/logout\")\n        console.log(res)\n    }\n)\n\nexport const fetchBatches = createAsyncThunk(\n    'data/fetchBatches',\n    async (_, thunkAPI) => {\n        const res = await axios.get('/batches')\n        return {batches: res.data.batches}\n    }\n)\n\nexport const fetchCursor = createAsyncThunk(\n    'data/fetchCursor',\n    async (_, thunkAPI) => {\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/cursor\", {params: {batch_id: batchId}})\n        return {cursor: res.data.cursor}\n    }\n)\n\nexport const fetchCands = createAsyncThunk(\n    'data/fetchCandidates',\n    async ({start, stop}, thunkAPI) => {\n        console.log(start, stop)\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/candidates\", {\n            params: {start: start, stop: stop, batch_id: batchId}\n        })\n        return {candidates: res.data.candidates}\n    }\n)\n\nexport const fetchCounts = createAsyncThunk(\n    'data/fetchCounts',\n    async (_, thunkAPI) => {\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/batch_stats\", {params: {batch_id: batchId}})\n        return {counts: res.data.counts}\n    }\n)\n\nexport const setGrade = createAsyncThunk(\n    'data/setGrade',\n    async ({id, grade}, thunkAPI) => {\n        const nextCursor = Math.min(thunkAPI.getState()['data'].cursor + 1)\n        thunkAPI.dispatch(dataSlice.actions.setCursor({cursor: nextCursor}))\n\n        const res = await axios.post(\"/candidates\", {id, grade})\n        thunkAPI.dispatch(dataSlice.actions.setCounts({counts: res.data.counts}))\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, grade}))\n    }\n)\n\nexport const setComment = createAsyncThunk(\n    'data/setComment',\n    async ({id, comment}, thunkAPI) => {\n        await axios.post(\"/candidates\", {id, comment})\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, comment}))\n    }\n)\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        userId: null\n    },\n    reducers: {},\n    extraReducers: {\n        [login.fulfilled]: (state, action) => {\n            state.userId = action.payload.userId\n        },\n        [logout.pending]: (state, action) => {\n            state.userId = null\n        }\n    }\n})\n\nconst dataAdapter = createEntityAdapter()\n\nexport const dataSlice = createSlice({\n    name: 'data',\n    initialState: dataAdapter.getInitialState({\n        selectedBatchId: null,\n        batches: {},\n        cursor: null,\n        counts: [0, 0, 0, 0, 0]\n    }),\n    reducers: {\n        selectBatch: (state, action) => {\n            if (state.batchId !== action.payload.batchId) {\n                state.selectedBatchId = action.payload.batchId\n                state.cursor = null\n                state.candidates = {}\n                state.counts = [0, 0, 0, 0, 0]\n            }\n        },\n        updateCandidate: (state, action) => {\n            const order = _.findKey(state.candidates, batch => batch.id === action.payload.id)\n            state.candidates[order] = {...state.candidates[order], ...action.payload}\n        },\n        setCursor: (state, action) => {\n            state.cursor = Math.min(Math.max(action.payload.cursor, 0), state.batches[state.selectedBatchId].n_cands - 1)\n        },\n        setCounts: (state, action) => {\n            state.counts = action.payload.counts\n        }\n    },\n    extraReducers: {\n        [fetchBatches.fulfilled]: (state, action) => {\n            state.batches = _.keyBy(action.payload.batches, 'id') || {}\n        },\n        [fetchCursor.fulfilled]: (state, action) => {\n            state.cursor = action.payload.cursor\n        },\n        [fetchCands.fulfilled]: (state, action) => {\n            action.payload.candidates.forEach(cand => {\n                state.candidates[cand.order] = cand\n            })\n        },\n        [fetchCounts.fulfilled]: (state, action) => {\n            state.counts = action.payload.counts\n        },\n        [logout.fulfilled]: state => ({\n            selectedBatchId: null,\n            batches: [],\n            candidates: {},\n            cursor: null,\n            counts: [0, 0, 0, 0, 0]\n        })\n    }\n})\n\nexport const selectedBatch = state => state.data.batches[state.data.selectedBatchId]\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage: storage,\n    blacklist: ['candidates']\n}\n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage\n}\n\nconst rootReducer = combineReducers({\n    auth: authSlice.reducer,\n    data: persistReducer(authPersistConfig, dataSlice.reducer)\n})\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }\n    })\n})\n\nexport const persistor = persistStore(store)","import React from \"react\";\nimport {Button, makeStyles, Paper, Snackbar, TextField, Typography} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport LensData from \"./LensData\";\nimport ProgressPanel from \"./ProgressPanel\";\nimport LensList from \"./LensList\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {connect} from \"react-redux\";\nimport {dataSlice, fetchCands, fetchCounts, fetchCursor, selectedBatch, setComment, setGrade} from \"./redux\";\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        display: 'flex',\n        flexDirection: 'row',\n        backgroundColor: theme.palette.background.default,\n        height: `calc(100vh - ${theme.mixins.toolbar.minHeight}px - 3*${theme.spacing(3)}px)`,\n        gap: `${theme.spacing(2)}px`\n    },\n    leftContainer: {\n        display: 'flex',\n        flex: 4,\n        gap: `${theme.spacing(2)}px`,\n        flexDirection: 'column'\n    },\n    rightContainer: {\n        display: 'flex',\n        flex: 8,\n        gap: `${theme.spacing(2)}px`,\n        flexDirection: 'column'\n    },\n    lensDataContainer: {\n        overflowY: 'auto'\n    },\n    metricContainer: {\n        display: 'flex',\n        flex: 4\n    },\n    imgListContainer: {\n        flex: 11,\n        display: 'flex',\n        gap: `${theme.spacing(1)}px`\n    },\n    paper: {\n        height: '100%',\n        maxWidth: '100%',\n        padding: theme.spacing(3),\n        gap: `${theme.spacing(1)}px`\n    },\n    img: {\n        height: '100%',\n        maxWidth: '100%',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}))\n\nfunction Grading(props) {\n    const classes = useStyles()\n    const {selectedBatch: batch, fetchCands, fetchCursor, fetchCounts, cursor, setCursor, candidates, setGrade, counts, setComment: submitComment} = props\n\n    const [comment, setComment] = React.useState('')\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n\n    React.useEffect(() => {\n        fetchCursor()\n        fetchCounts()\n    }, [batch.id, fetchCounts, fetchCursor])\n    const current = candidates[cursor]\n    React.useEffect(() => {\n        if (current) setComment(current.comment)\n    }, [current])\n\n    return <div className={classes.content} onKeyPress={e => {\n        if ([\"1\", \"2\", \"3\", \"4\", \"5\"].includes(e.key)) {\n            setGrade({id: current.id, grade: parseInt(e.key)})\n        } else if (e.key === \"b\") {\n            setCursor({cursor: cursor - 1})\n        } else if (e.key === \"n\") {\n            setCursor({cursor: cursor + 1})\n        }\n    }} tabIndex='0'>\n        <div className={classes.leftContainer}>\n            <div className={classes.lensDataContainer}>\n                <Paper className={classes.paper} style={{height: 'auto'}}>\n                    <Typography variant='h6'>Lens Data</Typography>\n                    {current ? <LensData candidate={current}/> : <Typography>Loading...</Typography>}\n                </Paper>\n            </div>\n            <div className={classes.metricContainer}>\n                <ProgressPanel batch={batch} counts={counts}/>\n            </div>\n        </div>\n        <div className={classes.rightContainer}>\n            <div className={classes.imgListContainer}>\n                <div style={{flex: 9}}>\n                    <Paper className={classes.paper}>\n                        {current ? <img className={classes.img} alt=\"Lens candidate\"\n                                        src={current.url}/> :\n                            <Typography>Loading...</Typography>}\n                    </Paper>\n                </div>\n                <div style={{flex: 3}}>\n                    <LensList candidates={candidates} batch={batch} loadCands={fetchCands} cursor={cursor}\n                              setCursor={setCursor} nextUngraded={fetchCursor}/>\n                </div>\n            </div>\n            <div>\n                <Paper className={classes.paper} style={{display: 'flex'}}>\n                    <TextField label=\"Comments\"\n                               multiline\n                               fullWidth\n                               value={comment}\n                               onKeyPressCapture={e => e.stopPropagation()}\n                               onChange={e => {\n                                   setComment(e.target.value)\n                                   e.stopPropagation()\n                               }}/>\n                    <Button variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => {\n                                submitComment({id: current.id, comment})\n                                // setSnackbarOpen(true)\n                            }}\n                            endIcon={<SendIcon/>}>Comment</Button>\n                    <Snackbar open={snackbarOpen} autoHideDuration={2000} onClose={() => setSnackbarOpen(false)}>\n                        <MuiAlert elevation={6} variant=\"filled\" onClose={() => setSnackbarOpen(false)}\n                                  severity=\"success\">Comment submitted!</MuiAlert>\n                    </Snackbar>\n                </Paper>\n            </div>\n        </div>\n    </div>\n}\n\nexport default connect(state => ({\n    selectedBatch: selectedBatch(state),\n    cursor: state.data.cursor,\n    candidates: state.data.candidates,\n    counts: state.data.counts\n}), {\n    fetchCands,\n    fetchCursor,\n    fetchCounts,\n    setCursor: dataSlice.actions.setCursor,\n    updateCandidate: dataSlice.actions.updateCandidate,\n    setGrade,\n    setComment\n})(Grading)","import React from 'react';\nimport clsx from 'clsx';\nimport {\n    AppBar,\n    Button,\n    Divider,\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    ListSubheader,\n    makeStyles,\n    Toolbar,\n    Typography,\n    useTheme\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport LoginDialog from \"./LoginDialog\";\nimport UploadDialog from \"./UploadDialog\";\nimport Grading from \"./Grading\";\nimport {connect} from \"react-redux\";\nimport {dataSlice, fetchBatches, login, logout, selectedBatch} from \"./redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: '100%'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nfunction Home(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n    const [uploadOpen, setUploadOpen] = React.useState(false)\n    const {selectedBatch, fetchBatches, logout, batches, userId, selectBatch, login, selectedBatchId} = props\n    React.useEffect(() => {\n        fetchBatches()\n    }, [fetchBatches])\n    return (\n        <div className={classes.root}>\n            <LoginDialog open={!Boolean(userId)} onLogin={login}/>\n            <UploadDialog uploadOpen={uploadOpen} handleClose={() => {\n                setUploadOpen(false)\n                fetchBatches()\n            }}/>\n\n            <AppBar position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() => setOpen(true)}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" style={{flexGrow: 1}}>\n                        Logged in user: {userId}\n                    </Typography>\n                    {userId &&\n                    <Button color='inherit' variant='outlined' onClick={logout}>Logout</Button>}\n                </Toolbar>\n            </AppBar>\n            <Drawer className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}>\n                <div className={classes.drawerHeader}>\n                    <Typography variant=\"body1\">Collapse</Typography>\n                    <IconButton onClick={() => setOpen(false)}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>\n                    <ListItem button onClick={() => setUploadOpen(true)}>\n                        <ListItemIcon><UploadIcon/></ListItemIcon>\n                        <ListItemText primary=\"Upload\"/>\n                    </ListItem>\n                </List>\n                <Divider/>\n                <List subheader={\n                    <ListSubheader>\n                        Batches\n                    </ListSubheader>\n                }>\n                    {Object.values(batches).map(batch =>\n                        <ListItem button key={batch.id} onClick={() => {\n                            selectBatch({batchId: batch.id})\n                        }}\n                                  selected={selectedBatchId === batch.id}>\n                            <ListItemText primary={batch.name} secondary={\n                                <>\n                                    Count: {batch.n_cands} <br/>\n                                    Created: {(new Date(Date.parse(batch.upload_time))).toLocaleString('en-GB')}\n                                </>\n                            }/>\n                        </ListItem>\n                    )}\n                </List>\n            </Drawer>\n            <main className={clsx(classes.content, {\n                [classes.contentShift]: open,\n            })}>\n                <div className={classes.drawerHeader}/>\n                {selectedBatch && userId ? <Grading/> :\n                    <Typography>Select a batch to grade</Typography>}\n            </main>\n        </div>\n    );\n}\n\nexport default connect(state => ({\n    selectedBatch: selectedBatch(state),\n    batches: state.data.batches,\n    userId: state.auth.userId,\n    selectedBatchId: state.data.selectedBatchId\n}), {\n    fetchBatches,\n    logout,\n    selectBatch: dataSlice.actions.selectBatch,\n    login\n})(Home)","import React from \"react\";\nimport {CookiesProvider} from \"react-cookie\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport Home from \"./Home\";\nimport {persistor, store} from './redux'\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from 'redux-persist/integration/react'\n\nexport default function App() {\n    return <CookiesProvider>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <CssBaseline/>\n                <Home/>\n            </PersistGate>\n        </Provider>\n    </CookiesProvider>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}