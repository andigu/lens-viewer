{"version":3,"sources":["axios.js","LoginDialog.js","UploadDialog.js","LensData.js","ProgressPanel.js","LensList.js","Grading.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","withCredentials","LoginDialog","props","open","onLogin","React","useState","userId","setUserId","errorMsg","setError","login","trim","length","post","then","res","data","success","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","value","onChange","evt","target","error","Boolean","onKeyDown","e","keyCode","helperText","DialogActions","Button","onClick","color","useStyles","makeStyles","theme","fileUpload","backgroundColor","padding","spacing","buttonProgress","position","top","left","marginTop","marginLeft","wrapper","UploadDialog","classes","uploadOpen","handleClose","inFlight","setInFlight","onClose","accept","getRootProps","getInputProps","acceptedFiles","className","map","file","key","path","size","toFixed","Typography","variant","disabled","formData","FormData","forEach","append","name","headers","catch","CircularProgress","LensData","candidate","setOpen","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","ra","dec","grade","href","url","rel","IconButton","aria-label","Object","entries","JSON","parse","additional","i","val","paper","gap","display","flexDirection","justifyContent","flex","container","ProgressPanel","batch","counts","Box","alignItems","minWidth","width","mr","LinearProgress","_","sum","n_cands","get","params","batch_id","responseType","window","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","grades","card","LensList","candidates","loadCands","cursor","setCursor","listRef","createRef","isItemLoaded","useEffect","current","scrollToItem","style","height","itemCount","minimumBatchSize","loadMoreItems","onItemsRendered","ref","itemSize","r","layout","index","ListItem","button","selected","order","src","alt","content","palette","background","default","mixins","toolbar","minHeight","leftContainer","rightContainer","lensDataContainer","metricContainer","imgListContainer","maxWidth","img","marginRight","Grading","comment","setComment","Array","cands","setCands","setCounts","snackbarOpen","setSnackbarOpen","start","stop","override","sortBy","orders","x","concat","slice","min","max","onKeyPress","includes","parseInt","Math","update","tabIndex","overflowY","overflowX","multiline","onKeyPressCapture","stopPropagation","endIcon","Snackbar","autoHideDuration","elevation","severity","root","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","flexGrow","contentShift","Home","useTheme","children","useCookies","cookies","setCookies","removeCookie","batches","setBatches","setUploadOpen","pullBatches","selectedBatch","keyBy","selectedBatchId","AppBar","clsx","Toolbar","edge","Drawer","anchor","direction","Divider","List","ListItemIcon","ListItemText","primary","subheader","ListSubheader","secondary","Date","upload_time","toLocaleString","App","CookiesProvider","CssBaseline","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.91cb7db6.chunk.js","sourcesContent":["import axios from 'axios'\nconst isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\nconst baseURL = isDev ? \"http://localhost:5000\" : \"\"\nexport default axios.create({\n    baseURL: baseURL,\n    withCredentials: true\n});","import React from 'react';\nimport axios from './axios';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField\n} from '@material-ui/core';\n\nexport default function LoginDialog(props) {\n    const {open, onLogin} = props\n    const [userId, setUserId] = React.useState('')\n    const [errorMsg, setError] = React.useState(\"\")\n    const login = () => {\n        if (userId.trim().length === 0) {\n            setError(\"Enter a valid user ID\")\n        } else {\n            axios.post(\"/login\", {\"user_id\": userId}).then((res) => {\n                if (res.data.success) {\n                    onLogin(userId)\n                    setUserId('')\n                    setError(\"\")\n                } else {\n                    setError(\"Something unexpected went wrong\")\n                }\n            })\n        }\n    }\n    return (\n        <div>\n            <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Log in</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Log in with a user id to save your batches\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"user_id\"\n                        label=\"User ID\"\n                        type=\"text\"\n                        fullWidth\n                        value={userId}\n                        onChange={evt => setUserId(evt.target.value)}\n                        error={Boolean(errorMsg)}\n                        onKeyDown={e => {\n                            if (e.keyCode === 13) login()\n                        }}\n                        helperText={errorMsg}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={login} color=\"primary\">\n                        Login\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import Dropzone from \"react-dropzone\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n    Typography\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    fileUpload: {\n        backgroundColor: '#f1f1f1',\n        padding: theme.spacing(3)\n    },\n    buttonProgress: {\n        // color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    wrapper: {\n        position: 'relative'\n    }\n}))\n\nexport default function UploadDialog(props) {\n    const classes = useStyles();\n    const {uploadOpen, handleClose} = props;\n    const [inFlight, setInFlight] = React.useState(false);\n\n    return <Dialog open={uploadOpen} onClose={handleClose}>\n        <Dropzone accept={'.csv'}>\n            {({getRootProps, getInputProps, acceptedFiles}) => {\n                return (\n                    <>\n                        <DialogTitle>Upload batches</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <div {...getRootProps({className: classes.fileUpload})}>\n                                    <input {...getInputProps()} />\n                                    {acceptedFiles.length > 0 ?\n                                        acceptedFiles.map(file => (\n                                            <li key={file.path}>\n                                                {file.path} - {(file.size / 1000000).toFixed(2)} Mb\n                                            </li>\n                                        )) :\n                                        <Typography variant='body2'>Click to upload your .csvs</Typography>}\n                                </div>\n                            </div>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button color=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                            <div className={classes.wrapper}>\n                                <Button color=\"primary\"\n                                        disabled={inFlight}\n                                        onClick={() => {\n                                            const formData = new FormData();\n                                            acceptedFiles.forEach((file) => formData.append(file.name, file))\n                                            setInFlight(true)\n                                            axios.post('/upload-batches', formData, {\n                                                headers: {\n                                                    'Content-Type': 'multipart/form-data'\n                                                },\n                                                withCredentials: true\n                                            }).then(res => {\n                                                setInFlight(false)\n                                                handleClose()\n                                            }).catch(() => {\n                                                setInFlight(false)\n                                            })\n                                        }}>\n                                    Upload\n                                </Button>\n                                {inFlight && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                            </div>\n                        </DialogActions>\n                    </>\n                );\n            }}\n        </Dropzone>\n\n    </Dialog>\n}","import React from 'react'\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nexport default function LensData(props) {\n    const {candidate} = props;\n    const [open, setOpen] = React.useState(false);\n\n    return <TableContainer component={Paper}>\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell><b>Parameter</b></TableCell>\n                    <TableCell><b>Value</b></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">RA</TableCell>\n                    <TableCell>{candidate.ra.toFixed(5)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">DEC</TableCell>\n                    <TableCell>{candidate.dec.toFixed(5)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">Grade</TableCell>\n                    <TableCell>{candidate.grade}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">URL</TableCell>\n                    <TableCell><a href={candidate.url} target='_blank'\n                                  rel=\"noopener noreferrer\">Skyviewer</a></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">Additional</TableCell>\n                    <TableCell>\n                        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>{open ?\n                            <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}</IconButton>\n                    </TableCell>\n                </TableRow>\n                {open && Object.entries(JSON.parse(candidate.additional)).map(([key, val], i) =>\n                    <TableRow key={i}>\n                        <TableCell component=\"th\" scope=\"row\">{key}</TableCell>\n                        <TableCell>{val}</TableCell>\n                    </TableRow>\n                )}\n\n            </TableBody>\n        </Table>\n    </TableContainer>\n}","import {Box, Button, LinearProgress, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport axios from './axios'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        gap: `${theme.spacing(1)}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        flex: 1\n    },\n    container: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}))\n\nexport default function ProgressPanel(props) {\n    const classes = useStyles()\n    const {batch, counts} = props\n    return <div className={classes.container}>\n        <Paper className={classes.paper}>\n            <Typography variant='h6'>Batch {batch.name} metrics</Typography>\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box minWidth='125px'>\n                    <Typography variant=\"body2\" color=\"textSecondary\">Grading progress: </Typography>\n                </Box>\n                <Box width=\"100%\" mr={1}>\n                    <LinearProgress variant=\"determinate\" value={_.sum(counts) / batch.n_cands * 100}/>\n                </Box>\n                <Box>\n                    <Typography variant=\"body2\" color=\"textSecondary\">{_.sum(counts)}/{batch.n_cands}</Typography>\n                </Box>\n            </Box>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                A's: {counts[0]} ({(counts[0] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                B's: {counts[1]} ({(counts[1] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                C's: {counts[2]} ({(counts[2] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                D's: {counts[3]} ({(counts[3] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                non-lens: {counts[4]} ({(counts[4] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Button variant='outlined' onClick={() => {\n                axios.get(\"/export_batch\", {\n                    params: {batch_id: batch.id},\n                    withCredentials: true,\n                    responseType: 'blob'\n                }).then(res => {\n                    const url = window.URL.createObjectURL(new Blob([res.data]));\n                    const link = document.createElement('a');\n                    link.href = url;\n                    link.setAttribute('download', `${batch.name}.csv`); //or any other extension\n                    document.body.appendChild(link);\n                    link.click();\n                })\n            }}>Export to CSV</Button>\n        </Paper></div>\n}","import AutoSizer from \"react-virtualized-auto-sizer\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport {FixedSizeList} from \"react-window\";\nimport {ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport _ from 'lodash'\nconst grades = ['Grade A', 'Grade B', 'Grade C', 'Grade D', 'Non lens']\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing(1)}px`,\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    }\n}))\n\nexport default function LensList(props) {\n    const {candidates, batch, loadCands, cursor, setCursor} = props;\n    const classes = useStyles()\n    const listRef = React.createRef()\n    const isItemLoaded = i => Boolean(candidates[i])\n    React.useEffect(() => {\n        if (listRef.current && cursor >= 0) listRef.current.scrollToItem(cursor, 'center')\n    }, [cursor])\n    return <Paper style={{height: '100%'}}><AutoSizer>\n        {({height, width}) => <InfiniteLoader isItemLoaded={isItemLoaded}\n                                              itemCount={batch.n_cands}\n                                              minimumBatchSize={20}\n                                              loadMoreItems={loadCands}>\n            {({onItemsRendered, ref}) => (\n                <FixedSizeList height={height} width={width} itemSize={100} itemCount={batch.n_cands} ref={(r) => {\n                    if (r) {\n                        ref(r)\n                        listRef.current = r\n                    }\n                }} onItemsRendered={onItemsRendered} layout=\"vertical\">\n                    {({index: i, style}) => {\n                        return <ListItem key={i} style={style} className={classes.card} button\n                                         selected={i === cursor} onClick={() => setCursor(i)}>\n                            <div>\n                                {isItemLoaded(i) ? <>\n                                    <Typography variant=\"body1\">\n                                        Cand #{candidates[i].order}\n                                    </Typography>\n                                    <Typography variant=\"body1\" style={{color: candidates[i].grade ? 'green' : 'red'}}>\n                                        {candidates[i].grade ? grades[candidates[i].grade-1] : 'Ungraded'}\n                                    </Typography>\n                                </> : <Typography variant=\"body1\">Loading...</Typography>\n                                }\n\n                            </div>\n                            {isItemLoaded(i) && <img src={candidates[i].url} style={{height: '100%'}}\n                                                     alt='Lens preview'/>}\n                        </ListItem>\n                    }}\n                </FixedSizeList>\n            )}\n\n        </InfiniteLoader>\n        }\n\n    </AutoSizer></Paper>\n}","import React from \"react\";\nimport {Button, makeStyles, Paper, TextField, Typography, Snackbar} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport axios from './axios';\nimport LensData from \"./LensData\";\nimport ProgressPanel from \"./ProgressPanel\";\nimport LensList from \"./LensList\";\nimport _ from \"lodash\"\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        display: 'flex',\n        flexDirection: 'row',\n        backgroundColor: theme.palette.background.default,\n        height: `calc(100vh - ${theme.mixins.toolbar.minHeight}px - 3*${theme.spacing(3)}px)`,\n        gap: `${theme.spacing(2)}px`\n    },\n    leftContainer: {\n        display: 'flex',\n        flex: 4,\n        gap: `${theme.spacing(2)}px`,\n        flexDirection: 'column'\n    },\n    rightContainer: {\n        display: 'flex',\n        flex: 8,\n        gap: `${theme.spacing(2)}px`,\n        flexDirection: 'column'\n    },\n    lensDataContainer: {\n        flex: 8\n    },\n    metricContainer: {\n        display: 'flex',\n        flex: 4\n    },\n    imgListContainer: {\n        flex: 11,\n        display: 'flex',\n        gap: `${theme.spacing(1)}px`\n    },\n    paper: {\n        height: '100%',\n        maxWidth: '100%',\n        padding: theme.spacing(3),\n        gap: `${theme.spacing(1)}px`\n    },\n    img: {\n        height: '100%',\n        maxWidth: '100%',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}))\n\nexport default function Grading(props) {\n    const classes = useStyles()\n    const {batch} = props\n\n    const [comment, setComment] = React.useState('')\n    const [cands, setCands] = React.useState(new Array(batch.n_cands))\n    const [cursor, setCursor] = React.useState(-1)\n    const [counts, setCounts] = React.useState([0, 0, 0, 0, 0])\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n\n    const loadCands = (start, stop, override = false) => {\n        if ((cursor >= 0) || override) {\n            axios.get(\"/candidates\", {\n                params: {start: start, stop: stop, batch_id: batch.id}\n            }).then(res => {\n                const candidates = _.sortBy(res.data.candidates, 'order')\n                const orders = res.data.candidates.map(x => x['order'])\n                setCands(cands => _.concat(_.slice(cands, 0, _.min(orders)), candidates, _.slice(cands, _.max(orders) + 1)))\n            })\n        }\n    }\n    const loadCursor = () => axios.get(\"/cursor\", {\n        params: {batch_id: batch.id}\n    }).then(res => {\n        setCursor(res.data.cursor)\n        loadCands(res.data.cursor - 10, res.data.cursor + 10, true)\n    })\n    const loadCounts = () => axios.get(\"/batch_stats\", {\n        params: {batch_id: batch.id}\n    }).then(res => setCounts(res.data.counts))\n\n    React.useEffect(() => {\n        loadCursor()\n        loadCounts()\n    }, [batch.id])\n    const current = cands[cursor]\n    React.useEffect(() => {\n        if (current) setComment(current.comment)\n    }, [current])\n    return <div className={classes.content} onKeyPress={e => {\n        if ([\"1\", \"2\", \"3\", \"4\", \"5\"].includes(e.key)) {\n            const grade = parseInt(e.key)\n            const order = current.order\n            axios.post(\"/candidates\", {\n                id: current.id,\n                grade: grade\n            }).then(res => {\n                setCounts(res.data.counts)\n                setCursor(cursor => Math.min(cursor + 1, batch.n_cands-1))\n                setCands(cands => [..._.slice(cands, 0, order), _.update(cands[order], 'grade', () => grade), ..._.slice(cands,order+1)])\n            })\n        } else if (e.key === \"b\") {\n            setCursor(cursor => Math.max(0, cursor - 1))\n        } else if (e.key === \"n\") {\n            setCursor(cursor => Math.min(cursor + 1, batch.n_cands-1))\n        }\n    }} tabIndex='0'>\n        <div className={classes.leftContainer}>\n            <div className={classes.lensDataContainer} style={{overflowY: 'scroll'}}>\n                <Paper className={classes.paper} style={{overflowX: 'scroll'}}>\n                    <Typography variant='h6'>Lens Data</Typography>\n                    {current ? <LensData candidate={current}/> : <Typography>Loading...</Typography>}\n                </Paper>\n            </div>\n            <div className={classes.metricContainer}>\n                <ProgressPanel batch={batch} counts={counts}/>\n            </div>\n        </div>\n        <div className={classes.rightContainer}>\n            <div className={classes.imgListContainer}>\n                <div style={{flex: 9}}>\n                    <Paper className={classes.paper}>\n                        {current ? <img className={classes.img} alt=\"Lens candidate\"\n                                              src={current.url}/> :\n                            <Typography>Loading...</Typography>}\n                    </Paper>\n                </div>\n                <div style={{flex: 3}}>\n                    <LensList candidates={cands} batch={batch} loadCands={loadCands} cursor={cursor}\n                              setCursor={setCursor}/>\n                </div>\n            </div>\n            <div>\n                <Paper className={classes.paper} style={{display: 'flex'}}>\n                    <TextField label=\"Comments\"\n                               multiline\n                               fullWidth\n                               value={comment}\n                               onKeyPressCapture={e => e.stopPropagation()}\n                               onChange={e => {\n                                   setComment(e.target.value)\n                                   e.stopPropagation()\n                               }}/>\n                    <Button variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => {\n                                const order = current.order\n                                axios.post(\"/candidates\", {\n                                    id: current.id,\n                                    comment: comment\n                                }).then(res => {\n                                    setSnackbarOpen(true)\n                                    setCands(cands => [..._.slice(cands, 0, order), _.update(cands[order], 'comment', () => comment), ..._.slice(cands,order+1)])\n                                })\n                            }}\n                            endIcon={<SendIcon/>}>Comment</Button>\n                    <Snackbar open={snackbarOpen} autoHideDuration={2000} onClose={() => setSnackbarOpen(false)}>\n                        <MuiAlert elevation={6} variant=\"filled\" onClose={() => setSnackbarOpen(false)} severity=\"success\">Comment submitted!</MuiAlert>\n                    </Snackbar>\n                </Paper>\n            </div>\n        </div>\n    </div>\n}","import React from 'react';\nimport clsx from 'clsx';\nimport {\n    AppBar,\n    Button,\n    Divider,\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    ListSubheader,\n    makeStyles,\n    Toolbar,\n    Typography,\n    useTheme\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport {useCookies} from \"react-cookie\";\nimport LoginDialog from \"./LoginDialog\";\nimport UploadDialog from \"./UploadDialog\";\nimport axios from \"./axios\";\nimport Grading from \"./Grading\";\nimport _ from \"lodash\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: '100%'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function Home(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n    const {children} = props\n    const [cookies, setCookies, removeCookie] = useCookies(['userId', 'selectedBatchId'])\n    const [batches, setBatches] = React.useState([])\n    const [uploadOpen, setUploadOpen] = React.useState(false)\n    const pullBatches = () => {\n        if (cookies.userId)\n            axios.get('/batches').then(res => {\n                setBatches(res.data.batches)\n            })\n    }\n    React.useEffect(pullBatches, [cookies.userId])\n    const selectedBatch = _.keyBy(batches, 'id')[parseInt(cookies.selectedBatchId)]\n\n    return (\n        <div className={classes.root}>\n            <LoginDialog open={!Boolean(cookies.userId)} onLogin={userId => {\n                setCookies('userId', userId)\n            }}/>\n            <UploadDialog uploadOpen={uploadOpen} handleClose={() => {\n                setUploadOpen(false)\n                pullBatches()\n            }}/>\n\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() => setOpen(true)}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" style={{flexGrow: 1}}>\n                        Logged in user: {cookies.userId}\n                    </Typography>\n                    {cookies.userId &&\n                    <Button color='inherit' variant='outlined' onClick={() => {\n                        removeCookie('userId')\n                        removeCookie('selectedBatchId')\n                        setBatches([])\n                    }}>Logout</Button>}\n                </Toolbar>\n            </AppBar>\n            <Drawer className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}>\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={() => setOpen(false)}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem button onClick={() => setUploadOpen(true)}>\n                        <ListItemIcon><UploadIcon/></ListItemIcon>\n                        <ListItemText primary=\"Upload\"/>\n                    </ListItem>\n                </List>\n                <Divider/>\n                <List subheader={\n                    <ListSubheader>\n                        Batches\n                    </ListSubheader>\n                }>\n                    {batches.map(batch =>\n                        <ListItem button key={batch.id} onClick={() => setCookies('selectedBatchId', batch.id)}\n                                  selected={parseInt(cookies.selectedBatchId) === batch.id}>\n                            <ListItemText primary={batch.name} secondary={\n                                <>\n                                    Count: {batch.n_cands} <br/>\n                                    Created: {(new Date(Date.parse(batch.upload_time))).toLocaleString('en-GB')}\n                                </>\n                            }/>\n                        </ListItem>\n                    )}\n                </List>\n            </Drawer>\n            <main className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}>\n                <div className={classes.drawerHeader} />\n                {selectedBatch && cookies.userId ? <Grading batch={selectedBatch}/> :\n                    <Typography>Select a batch to grade</Typography>}\n            </main>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {CookiesProvider} from \"react-cookie\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport Home from \"./Home\";\n\nexport default function App() {\n    return <CookiesProvider>\n        <CssBaseline/>\n        <Home/>\n    </CookiesProvider>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}