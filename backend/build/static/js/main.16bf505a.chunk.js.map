{"version":3,"sources":["LoginDialog.js","axios.js","UploadDialog.js","LensData.js","SettingsDialog.js","ProgressPanel.js","LensList.js","redux/index.js","LensImage.js","Grading.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["LoginDialog","props","open","onLogin","React","useState","userId","setUserId","errorMsg","setError","login","trim","length","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","value","onChange","evt","target","error","Boolean","onKeyDown","e","keyCode","helperText","DialogActions","Button","onClick","color","axios","create","baseURL","withCredentials","useStyles","makeStyles","theme","fileUpload","backgroundColor","padding","spacing","buttonProgress","position","top","left","marginTop","marginLeft","wrapper","UploadDialog","classes","uploadOpen","handleClose","inFlight","setInFlight","onClose","accept","getRootProps","getInputProps","acceptedFiles","className","map","file","path","size","toFixed","Typography","variant","disabled","formData","FormData","forEach","append","name","post","headers","then","catch","CircularProgress","LensData","candidate","setOpen","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","ra","dec","grade","href","url","rel","IconButton","aria-label","Object","entries","JSON","parse","additional","i","key","val","SettingsDialog","paper","gap","display","flexDirection","justifyContent","flex","container","ProgressPanel","batch","counts","Box","alignItems","minWidth","width","mr","LinearProgress","_","sum","n_cands","ButtonGroup","style","startIcon","ImportExport","get","params","batch_id","timestamp","Date","getMilliseconds","responseType","res","window","URL","createObjectURL","Blob","data","link","document","createElement","setAttribute","body","appendChild","click","Settings","grades","card","paddingLeft","height","LensList","candidates","loadCands","cursor","setCursor","nextUngraded","listRef","createRef","isItemLoaded","useEffect","current","scrollToItem","Divider","itemCount","minimumBatchSize","loadMoreItems","start","stop","onItemsRendered","ref","itemSize","r","layout","index","ListItem","button","selected","order","src","alt","createAsyncThunk","thunkAPI","a","dispatch","fetchBatches","success","logout","console","log","batches","fetchCursor","batchId","getState","selectedBatchId","fetchCands","fetchCounts","setGrade","nextCursor","Math","min","dataSlice","actions","setCounts","updateCandidate","setComment","comment","setMark","coordinate","clearMarks","delete","authSlice","createSlice","initialState","reducers","extraReducers","fulfilled","state","action","payload","pending","dataAdapter","createEntityAdapter","getInitialState","selectBatch","findKey","max","deleteBatch","omit","keyBy","cand","selectedBatch","authPersistConfig","storage","blacklist","persistConfig","version","rootReducer","combineReducers","auth","reducer","persistReducer","persistedReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","connect","dim","img","Image","image","offsetX","offsetY","onContextMenu","preventDefault","source","x","y","radius","stroke","lens","content","palette","background","default","mixins","toolbar","minHeight","leftContainer","rightContainer","lensDataContainer","overflowY","metricContainer","imgListContainer","maxWidth","marginRight","submitComment","snackbarOpen","setSnackbarOpen","onKeyPress","includes","parseInt","tabIndex","multiline","onKeyPressCapture","stopPropagation","endIcon","Snackbar","autoHideDuration","elevation","severity","drawerWidth","root","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","flexGrow","contentShift","useTheme","setUploadOpen","AppBar","clsx","Toolbar","edge","Drawer","anchor","direction","List","ListItemIcon","ListItemText","primary","subheader","ListSubheader","values","secondary","upload_time","toLocaleString","App","CookiesProvider","loading","CssBaseline","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.16bf505a.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField\n} from '@material-ui/core';\n\nexport default function LoginDialog(props) {\n    const {open, onLogin} = props\n    const [userId, setUserId] = React.useState('')\n    const [errorMsg, setError] = React.useState(\"\")\n    const login = () => {\n        if (userId.trim().length === 0) {\n            setError(\"Enter a valid user ID\")\n        } else {\n            onLogin(userId)\n        }\n    }\n    return (\n        <div>\n            <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Log in</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Log in with a user id to save your batches\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"user_id\"\n                        label=\"User ID\"\n                        type=\"text\"\n                        fullWidth\n                        value={userId}\n                        onChange={evt => setUserId(evt.target.value)}\n                        error={Boolean(errorMsg)}\n                        onKeyDown={e => {\n                            if (e.keyCode === 13) login()\n                        }}\n                        helperText={errorMsg}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={login} color=\"primary\">\n                        Login\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import axios from 'axios'\n\nconst isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\nconst baseURL = isDev ? \"http://localhost:5000\" : \"\"\nexport default axios.create({\n    baseURL: baseURL,\n    withCredentials: true\n});","import Dropzone from \"react-dropzone\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n    Typography\n} from \"@material-ui/core\";\nimport axios from \"./axios\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    fileUpload: {\n        backgroundColor: '#f1f1f1',\n        padding: theme.spacing(3)\n    },\n    buttonProgress: {\n        // color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    wrapper: {\n        position: 'relative'\n    }\n}))\n\nexport default function UploadDialog(props) {\n    const classes = useStyles();\n    const {uploadOpen, handleClose} = props;\n    const [inFlight, setInFlight] = React.useState(false);\n\n    return <Dialog open={uploadOpen} onClose={handleClose}>\n        <Dropzone accept={'.csv'}>\n            {({getRootProps, getInputProps, acceptedFiles}) => {\n                return (\n                    <>\n                        <DialogTitle>Upload batches</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <div {...getRootProps({className: classes.fileUpload})}>\n                                    <input {...getInputProps()} />\n                                    {acceptedFiles.length > 0 ?\n                                        acceptedFiles.map(file => (\n                                            <li key={file.path}>\n                                                {file.path} - {(file.size / 1000000).toFixed(2)} Mb\n                                            </li>\n                                        )) :\n                                        <Typography variant='body2'>Click to upload your .csvs</Typography>}\n                                </div>\n                            </div>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button color=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                            <div className={classes.wrapper}>\n                                <Button color=\"primary\"\n                                        disabled={inFlight}\n                                        onClick={() => {\n                                            const formData = new FormData();\n                                            acceptedFiles.forEach((file) => formData.append(file.name, file))\n                                            setInFlight(true)\n                                            axios.post('/upload-batches', formData, {\n                                                headers: {\n                                                    'Content-Type': 'multipart/form-data'\n                                                },\n                                                withCredentials: true\n                                            }).then(() => {\n                                                setInFlight(false)\n                                                handleClose()\n                                            }).catch(() => {\n                                                setInFlight(false)\n                                            })\n                                        }}>\n                                    Upload\n                                </Button>\n                                {inFlight && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                            </div>\n                        </DialogActions>\n                    </>\n                );\n            }}\n        </Dropzone>\n\n    </Dialog>\n}","import React from 'react'\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nexport default function LensData(props) {\n    const {candidate} = props;\n    const [open, setOpen] = React.useState(false);\n\n    return <TableContainer component={Paper}>\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell><b>Parameter</b></TableCell>\n                    <TableCell><b>Value</b></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">RA</TableCell>\n                    <TableCell>{candidate.ra.toFixed(5)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">DEC</TableCell>\n                    <TableCell>{candidate.dec.toFixed(5)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">Grade</TableCell>\n                    <TableCell>{candidate.grade}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">URL</TableCell>\n                    <TableCell><a href={candidate.url} target='_blank'\n                                  rel=\"noopener noreferrer\">Skyviewer</a></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">Additional</TableCell>\n                    <TableCell>\n                        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>{open ?\n                            <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}</IconButton>\n                    </TableCell>\n                </TableRow>\n                {open && Object.entries(JSON.parse(candidate.additional)).map(([key, val], i) =>\n                    <TableRow key={i}>\n                        <TableCell component=\"th\" scope=\"row\">{key}</TableCell>\n                        <TableCell>{val}</TableCell>\n                    </TableRow>\n                )}\n\n            </TableBody>\n        </Table>\n    </TableContainer>\n}","import React from \"react\";\nimport {Dialog, DialogTitle, DialogContent, Button, DialogContentText} from \"@material-ui/core\";\n\n\nexport default function SettingsDialog(props) {\n    const {open, handleClose} = props;\n    return <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                More settings to come\n            </DialogContentText>\n            <Button color='secondary'>Delete</Button>\n        </DialogContent>\n    </Dialog>\n}","import {Box, Button, ButtonGroup, LinearProgress, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport {Settings as SettingsIcon, ImportExport as ImportExportIcon} from '@material-ui/icons';\nimport React from \"react\";\nimport _ from \"lodash\";\nimport axios from './axios'\nimport SettingsDialog from \"./SettingsDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        gap: `${theme.spacing(1)}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        flex: 1\n    },\n    container: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}))\n\nexport default function ProgressPanel(props) {\n    const classes = useStyles()\n    const {batch, counts} = props\n    const [open, setOpen] = React.useState(false);\n    return <div className={classes.container}>\n        <Paper className={classes.paper}>\n            <Typography variant='h6'>Batch <i>{batch.name}</i> metrics</Typography>\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box minWidth='125px'>\n                    <Typography variant=\"body2\" color=\"textSecondary\">Grading progress: </Typography>\n                </Box>\n                <Box width=\"100%\" mr={1}>\n                    <LinearProgress variant=\"determinate\" value={_.sum(counts) / batch.n_cands * 100}/>\n                </Box>\n                <Box>\n                    <Typography variant=\"body2\" color=\"textSecondary\">{_.sum(counts)}/{batch.n_cands}</Typography>\n                </Box>\n            </Box>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                A's: {counts[0]} ({(counts[0] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                B's: {counts[1]} ({(counts[1] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                C's: {counts[2]} ({(counts[2] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                D's: {counts[3]} ({(counts[3] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Marked\n                non-lens: {counts[4]} ({(counts[4] / batch.n_cands * 100).toFixed(2)}%)</Typography>\n            <ButtonGroup color=\"primary\">\n                <Button style={{'width': '100%'}}\n                        startIcon={<ImportExportIcon/>}\n                        onClick={() => {\n                            axios.get(\"/export_batch\", {\n                                params: {batch_id: batch.id, timestamp: new Date().getMilliseconds()},\n                                withCredentials: true,\n                                responseType: 'blob'\n                            }).then(res => {\n                                const url = window.URL.createObjectURL(new Blob([res.data]));\n                                const link = document.createElement('a');\n                                link.href = url;\n                                link.setAttribute('download', `${batch.name}.csv`); //or any other extension\n                                document.body.appendChild(link);\n                                link.click();\n                            })\n                        }}>Export to CSV</Button>\n                <Button style={{'width': '100%'}} startIcon={<SettingsIcon/>} onClick={() => setOpen(true)}>Settings</Button>\n            </ButtonGroup>\n        </Paper>\n        <SettingsDialog open={open} handleClose={() => setOpen(false)}/>\n    </div>\n}","import AutoSizer from \"react-virtualized-auto-sizer\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport {FixedSizeList} from \"react-window\";\nimport {Button, Divider, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst grades = ['Grade A', 'Grade B', 'Grade C', 'Grade D', 'Non lens']\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing(1)}px`,\n        paddingLeft: `${theme.spacing(2)}px`,\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    container: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}))\n\nexport default function LensList(props) {\n    const {candidates, batch, loadCands, cursor, setCursor, nextUngraded} = props;\n    const classes = useStyles()\n    const listRef = React.createRef()\n    const isItemLoaded = i => Boolean(candidates[i])\n    React.useEffect(() => {\n        if (listRef.current && cursor >= 0) listRef.current.scrollToItem(cursor, 'center')\n    }, [cursor])\n    return <Paper className={classes.container}>\n        <Button style={{width: '100%', flex: 0}} onClick={nextUngraded}>Next Ungraded</Button>\n        <Divider/>\n        <div style={{flex: 1}}>\n            <AutoSizer>\n                {({height, width}) => <InfiniteLoader isItemLoaded={isItemLoaded}\n                                                      itemCount={batch.n_cands}\n                                                      minimumBatchSize={20}\n                                                      loadMoreItems={(start, stop) => loadCands({start, stop})}>\n                    {({onItemsRendered, ref}) => (\n                        <FixedSizeList height={height} width={width} itemSize={100} itemCount={batch.n_cands}\n                                       ref={(r) => {\n                                           if (r) {\n                                               ref(r)\n                                               listRef.current = r\n                                           }\n                                       }} onItemsRendered={onItemsRendered} layout=\"vertical\">\n                            {({index: i, style}) => {\n                                return <ListItem key={i} style={style} className={classes.card} button\n                                                 selected={i === cursor} onClick={() => setCursor({cursor: i})}>\n                                    <div>\n                                        {isItemLoaded(i) ? <>\n                                            <Typography variant=\"body1\">\n                                                Cand #{candidates[i].order}\n                                            </Typography>\n                                            <Typography variant=\"body1\"\n                                                        style={{color: candidates[i].grade ? 'green' : 'red'}}>\n                                                {candidates[i].grade ? grades[candidates[i].grade - 1] : 'Ungraded'}\n                                            </Typography>\n                                        </> : <Typography variant=\"body1\">Loading...</Typography>\n                                        }\n\n                                    </div>\n                                    {isItemLoaded(i) && <img src={candidates[i].url} style={{height: '100%'}}\n                                                             alt='Lens preview'/>}\n                                </ListItem>\n                            }}\n                        </FixedSizeList>\n                    )}\n\n                </InfiniteLoader>\n                }\n\n            </AutoSizer>\n        </div>\n    </Paper>\n}","import {\n    combineReducers,\n    configureStore,\n    createAsyncThunk,\n    createEntityAdapter,\n    createSlice,\n    getDefaultMiddleware\n} from \"@reduxjs/toolkit\";\nimport axios from '../axios'\nimport _ from 'lodash'\nimport {FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (userId, thunkAPI) => {\n        const res = await axios.post(\"/login\", {\"user_id\": userId})\n        thunkAPI.dispatch(fetchBatches())\n        return {userId: res.data.success ? userId : null}\n    }\n)\n\nexport const logout = createAsyncThunk(\n    'auth/logout',\n    async (_, thunkAPI) => {\n        const res = await axios.post(\"/logout\")\n        console.log(res)\n    }\n)\n\nexport const fetchBatches = createAsyncThunk(\n    'data/fetchBatches',\n    async (_, thunkAPI) => {\n        const res = await axios.get('/batches')\n        return {batches: res.data.batches}\n    }\n)\n\nexport const fetchCursor = createAsyncThunk(\n    'data/fetchCursor',\n    async (_, thunkAPI) => {\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/cursor\", {params: {batch_id: batchId}})\n        return {cursor: res.data.cursor}\n    }\n)\n\nexport const fetchCands = createAsyncThunk(\n    'data/fetchCandidates',\n    async ({start, stop}, thunkAPI) => {\n        console.log(start, stop)\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/candidates\", {\n            params: {start: start, stop: stop, batch_id: batchId}\n        })\n        return {candidates: res.data.candidates}\n    }\n)\n\nexport const fetchCounts = createAsyncThunk(\n    'data/fetchCounts',\n    async (_, thunkAPI) => {\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/batch_stats\", {params: {batch_id: batchId}})\n        return {counts: res.data.counts}\n    }\n)\n\nexport const setGrade = createAsyncThunk(\n    'data/setGrade',\n    async ({id, grade}, thunkAPI) => {\n        const nextCursor = Math.min(thunkAPI.getState()['data'].cursor + 1)\n        thunkAPI.dispatch(dataSlice.actions.setCursor({cursor: nextCursor}))\n\n        const res = await axios.post(\"/candidates\", {id, grade})\n        thunkAPI.dispatch(dataSlice.actions.setCounts({counts: res.data.counts}))\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, grade}))\n    }\n)\n\nexport const setComment = createAsyncThunk(\n    'data/setComment',\n    async ({id, comment}, thunkAPI) => {\n        await axios.post(\"/candidates\", {id, comment})\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, comment}))\n    }\n)\n\nexport const setMark = createAsyncThunk(\n    'data/setMark',\n    async ({id, type, coordinate}, thunkAPI) => {\n        const res = await axios.post(\"/mark\", {id, type, coordinate})\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, ...res.data['candidate']}))\n    }\n)\n\nexport const clearMarks = createAsyncThunk(\n    'data/clearMarks',\n    async ({id}, thunkAPI) => {\n        const res = await axios.delete(\"/mark\", {data: {id}})\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, ...res.data['candidate']}))\n    }\n)\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        userId: null\n    },\n    reducers: {},\n    extraReducers: {\n        [login.fulfilled]: (state, action) => {\n            state.userId = action.payload.userId\n        },\n        [logout.pending]: (state, action) => {\n            state.userId = null\n        }\n    }\n})\n\nconst dataAdapter = createEntityAdapter()\n\nexport const dataSlice = createSlice({\n    name: 'data',\n    initialState: dataAdapter.getInitialState({\n        selectedBatchId: null,\n        batches: {},\n        cursor: null,\n        counts: [0, 0, 0, 0, 0]\n    }),\n    reducers: {\n        selectBatch: (state, action) => {\n            if (state.batchId !== action.payload.batchId) {\n                state.selectedBatchId = action.payload.batchId\n                state.cursor = null\n                state.candidates = {}\n                state.counts = [0, 0, 0, 0, 0]\n            }\n        },\n        updateCandidate: (state, action) => {\n            const order = _.findKey(state.candidates, batch => batch.id === action.payload.id)\n            state.candidates[order] = {...state.candidates[order], ...action.payload}\n        },\n        setCursor: (state, action) => {\n            state.cursor = Math.min(Math.max(action.payload.cursor, 0), state.batches[state.selectedBatchId].n_cands - 1)\n        },\n        setCounts: (state, action) => {\n            state.counts = action.payload.counts\n        },\n        deleteBatch: (state, action) => {\n            state.batches = _.omit(state.batches, [action.payload.batchId])\n            state.selectedBatchId = null\n        },\n    },\n    extraReducers: {\n        [fetchBatches.fulfilled]: (state, action) => {\n            state.batches = _.keyBy(action.payload.batches, 'id') || {}\n        },\n        [fetchCursor.fulfilled]: (state, action) => {\n            state.cursor = action.payload.cursor\n        },\n        [fetchCands.fulfilled]: (state, action) => {\n            action.payload.candidates.forEach(cand => {\n                state.candidates[cand.order] = cand\n            })\n        },\n        [fetchCounts.fulfilled]: (state, action) => {\n            state.counts = action.payload.counts\n        },\n        [logout.fulfilled]: state => ({\n            selectedBatchId: null,\n            batches: [],\n            candidates: {},\n            cursor: null,\n            counts: [0, 0, 0, 0, 0]\n        })\n    }\n})\n\nexport const selectedBatch = state => state.data.batches[state.data.selectedBatchId]\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage: storage,\n    blacklist: ['candidates']\n}\n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage\n}\n\nconst rootReducer = combineReducers({\n    auth: authSlice.reducer,\n    data: persistReducer(authPersistConfig, dataSlice.reducer)\n})\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }\n    })\n})\n\nexport const persistor = persistStore(store)","import React from \"react\";\nimport {Circle, Image, Layer, Stage} from \"react-konva\";\nimport {Button} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {clearMarks, setMark} from \"./redux\";\n\nfunction LensImage(props) {\n    const {current, width, height} = props;\n    const src = current.url;\n    const dim = Math.min(width, height);\n    const img = new window.Image();\n    img.src = src;\n    img.height = dim;\n    img.width = dim;\n    return <div style={{height: \"100%\", display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n        <Stage width={dim} height={dim}\n               style={{\n                   display: 'flex',\n                   justifyContent: 'center',\n                   height: '100%',\n                   width: '100%',\n                   alignItems: 'center'\n               }}>\n            <Layer>\n                <Image image={img} onClick={(evt) => {\n                    props.setMark({id: current.id, type: 'source', coordinate: [evt.evt.offsetX / dim, evt.evt.offsetY / dim]})\n                }} onContextMenu={(evt) => {\n                    evt.evt.preventDefault()\n                    props.setMark({id: current.id, type: 'lens', coordinate: [evt.evt.offsetX / dim, evt.evt.offsetY / dim]})\n                }}/>\n            </Layer>\n            <Layer>\n                {current.source && current.source.map(([x,y], i) => <Circle key={i} x={dim * x} y={dim * y} radius={dim / 20} stroke='red'/>)}\n                {current.lens && current.lens.length === 2 && <Circle x={dim * current.lens[0]} y={dim * current.lens[1]} radius={dim / 20} stroke='white'/>}\n            </Layer>\n        </Stage>\n        <Button style={{width: '100%'}} size=\"large\" variant=\"outlined\" onClick={() => props.clearMarks({id:current.id})}>Clear</Button>\n    </div>\n}\n\nexport default connect(null, {\n    clearMarks,\n    setMark\n})(LensImage)","import React from \"react\";\nimport {Button, makeStyles, Paper, Snackbar, TextField, Typography} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport LensData from \"./LensData\";\nimport ProgressPanel from \"./ProgressPanel\";\nimport LensList from \"./LensList\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {connect} from \"react-redux\";\nimport {dataSlice, fetchCands, fetchCounts, fetchCursor, selectedBatch, setComment, setGrade} from \"./redux\";\nimport LensImage from \"./LensImage\";\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        display: 'flex',\n        flexDirection: 'row',\n        backgroundColor: theme.palette.background.default,\n        height: `calc(100vh - ${theme.mixins.toolbar.minHeight}px - 3*${theme.spacing(3)}px)`,\n        gap: `${theme.spacing(2)}px`\n    },\n    leftContainer: {\n        display: 'flex',\n        flex: 4,\n        gap: `${theme.spacing(2)}px`,\n        flexDirection: 'column'\n    },\n    rightContainer: {\n        display: 'flex',\n        flex: 8,\n        gap: `${theme.spacing(2)}px`,\n        flexDirection: 'column'\n    },\n    lensDataContainer: {\n        overflowY: 'auto'\n    },\n    metricContainer: {\n        display: 'flex',\n        flex: 4\n    },\n    imgListContainer: {\n        flex: 11,\n        display: 'flex',\n        gap: `${theme.spacing(1)}px`\n    },\n    paper: {\n        height: '100%',\n        maxWidth: '100%',\n        padding: theme.spacing(3),\n        gap: `${theme.spacing(1)}px`\n    },\n    img: {\n        height: '100%',\n        maxWidth: '100%',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}))\n\nfunction Grading(props) {\n    const classes = useStyles()\n    const {selectedBatch: batch, fetchCands, fetchCursor, fetchCounts, cursor, setCursor, candidates, setGrade, counts, setComment: submitComment} = props\n\n    const [comment, setComment] = React.useState('')\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n\n    React.useEffect(() => {\n        fetchCursor()\n        fetchCounts()\n    }, [batch.id, fetchCounts, fetchCursor])\n    const current = candidates[cursor]\n    React.useEffect(() => {\n        if (current) setComment(current.comment)\n    }, [current])\n    return <div className={classes.content} onKeyPress={e => {\n        if ([\"1\", \"2\", \"3\", \"4\", \"5\"].includes(e.key)) {\n            setGrade({id: current.id, grade: parseInt(e.key)})\n        } else if (e.key === \"b\") {\n            setCursor({cursor: cursor - 1})\n        } else if (e.key === \"n\") {\n            setCursor({cursor: cursor + 1})\n        }\n    }} tabIndex='0'>\n        <div className={classes.leftContainer}>\n            <div className={classes.lensDataContainer}>\n                <Paper className={classes.paper} style={{height: 'auto'}}>\n                    <Typography variant='h6'>Lens Data</Typography>\n                    {current ? <LensData candidate={current}/> : <Typography>Loading...</Typography>}\n                </Paper>\n            </div>\n            <div className={classes.metricContainer}>\n                <ProgressPanel batch={batch} counts={counts}/>\n            </div>\n        </div>\n        <div className={classes.rightContainer}>\n            <div className={classes.imgListContainer}>\n                <div style={{flex: 9}}>\n                    <Paper className={classes.paper}>\n                        {current ? <LensImage current={current} width={500} height={500}/> :\n                            <Typography>Loading...</Typography>}\n                    </Paper>\n                </div>\n                <div style={{flex: 3}}>\n                    <LensList candidates={candidates} batch={batch} loadCands={fetchCands} cursor={cursor}\n                              setCursor={setCursor} nextUngraded={fetchCursor}/>\n                </div>\n            </div>\n            <div>\n                <Paper className={classes.paper} style={{display: 'flex'}}>\n                    <TextField label=\"Comments\"\n                               multiline\n                               fullWidth\n                               value={comment}\n                               onKeyPressCapture={e => e.stopPropagation()}\n                               onChange={e => {\n                                   setComment(e.target.value)\n                                   e.stopPropagation()\n                               }}/>\n                    <Button variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => {\n                                submitComment({id: current.id, comment})\n                                // setSnackbarOpen(true)\n                            }}\n                            endIcon={<SendIcon/>}>Comment</Button>\n                    <Snackbar open={snackbarOpen} autoHideDuration={2000} onClose={() => setSnackbarOpen(false)}>\n                        <MuiAlert elevation={6} variant=\"filled\" onClose={() => setSnackbarOpen(false)}\n                                  severity=\"success\">Comment submitted!</MuiAlert>\n                    </Snackbar>\n                </Paper>\n            </div>\n        </div>\n    </div>\n}\n\nexport default connect(state => ({\n    selectedBatch: selectedBatch(state),\n    cursor: state.data.cursor,\n    candidates: state.data.candidates,\n    counts: state.data.counts\n}), {\n    fetchCands,\n    fetchCursor,\n    fetchCounts,\n    setCursor: dataSlice.actions.setCursor,\n    updateCandidate: dataSlice.actions.updateCandidate,\n    setGrade,\n    setComment\n})(Grading)","import React from 'react';\nimport clsx from 'clsx';\nimport {\n    AppBar,\n    Button,\n    Divider,\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    ListSubheader,\n    makeStyles,\n    Toolbar,\n    Typography,\n    useTheme\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport LoginDialog from \"./LoginDialog\";\nimport UploadDialog from \"./UploadDialog\";\nimport Grading from \"./Grading\";\nimport {connect} from \"react-redux\";\nimport {dataSlice, fetchBatches, login, logout, selectedBatch} from \"./redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: '100%'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nfunction Home(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n    const [uploadOpen, setUploadOpen] = React.useState(false)\n    const {selectedBatch, fetchBatches, logout, batches, userId, selectBatch, login, selectedBatchId} = props\n    React.useEffect(() => {\n        fetchBatches()\n    }, [fetchBatches])\n    return (\n        <div className={classes.root}>\n            <LoginDialog open={!Boolean(userId)} onLogin={login}/>\n            <UploadDialog uploadOpen={uploadOpen} handleClose={() => {\n                setUploadOpen(false)\n                fetchBatches()\n            }}/>\n\n            <AppBar position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() => setOpen(true)}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" style={{flexGrow: 1}}>\n                        Logged in user: {userId}\n                    </Typography>\n                    {userId &&\n                    <Button color='inherit' variant='outlined' onClick={logout}>Logout</Button>}\n                </Toolbar>\n            </AppBar>\n            <Drawer className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}>\n                <div className={classes.drawerHeader}>\n                    <Typography variant=\"body1\">Collapse</Typography>\n                    <IconButton onClick={() => setOpen(false)}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>\n                    <ListItem button onClick={() => setUploadOpen(true)}>\n                        <ListItemIcon><UploadIcon/></ListItemIcon>\n                        <ListItemText primary=\"Upload\"/>\n                    </ListItem>\n                </List>\n                <Divider/>\n                <List subheader={\n                    <ListSubheader>\n                        Batches\n                    </ListSubheader>\n                }>\n                    {Object.values(batches).map(batch =>\n                        <ListItem button key={batch.id} onClick={() => {\n                            selectBatch({batchId: batch.id})\n                        }}\n                                  selected={selectedBatchId === batch.id}>\n                            <ListItemText primary={batch.name} secondary={\n                                <>\n                                    Count: {batch.n_cands} <br/>\n                                    Created: {(new Date(Date.parse(batch.upload_time))).toLocaleString('en-GB')}\n                                </>\n                            }/>\n                        </ListItem>\n                    )}\n                </List>\n            </Drawer>\n            <main className={clsx(classes.content, {\n                [classes.contentShift]: open,\n            })}>\n                <div className={classes.drawerHeader}/>\n                {selectedBatch && userId ? <Grading/> :\n                    <Typography>Select a batch to grade</Typography>}\n            </main>\n        </div>\n    );\n}\n\nexport default connect(state => ({\n    selectedBatch: selectedBatch(state),\n    batches: state.data.batches,\n    userId: state.auth.userId,\n    selectedBatchId: state.data.selectedBatchId\n}), {\n    fetchBatches,\n    logout,\n    selectBatch: dataSlice.actions.selectBatch,\n    login\n})(Home)","import React from \"react\";\nimport {CookiesProvider} from \"react-cookie\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport Home from \"./Home\";\nimport {persistor, store} from './redux'\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from 'redux-persist/integration/react'\n\nexport default function App() {\n    return <CookiesProvider>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <CssBaseline/>\n                <Home/>\n            </PersistGate>\n        </Provider>\n    </CookiesProvider>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}