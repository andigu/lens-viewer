{"version":3,"sources":["LoginDialog.js","axios.js","UploadDialog.js","LensData.js","redux/index.js","SettingsDialog.js","ProgressPanel.js","LensList.js","LensImage.js","Grading.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["LoginDialog","props","open","onLogin","React","useState","userId","setUserId","errorMsg","setError","login","trim","length","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","value","onChange","evt","target","error","Boolean","onKeyDown","e","keyCode","helperText","DialogActions","Button","onClick","color","axios","create","baseURL","withCredentials","useStyles","makeStyles","theme","fileUpload","backgroundColor","padding","spacing","buttonProgress","position","top","left","marginTop","marginLeft","wrapper","UploadDialog","classes","uploadOpen","handleClose","inFlight","setInFlight","onClose","accept","getRootProps","getInputProps","acceptedFiles","className","map","file","path","size","toFixed","Typography","variant","disabled","formData","FormData","forEach","append","name","post","headers","then","catch","CircularProgress","LensData","candidate","setOpen","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","ra","dec","grade","href","skyviewer","rel","IconButton","aria-label","Object","entries","JSON","parse","additional","i","key","val","createAsyncThunk","thunkAPI","a","res","dispatch","fetchBatches","data","success","logout","_","console","log","get","batches","fetchCursor","batchId","getState","selectedBatchId","params","batch_id","cursor","fetchCands","start","stop","candidates","fetchCounts","counts","setGrade","nextCursor","Math","min","dataSlice","actions","setCursor","setCounts","updateCandidate","setComment","comment","setMark","coordinate","clearMarks","delete","authSlice","createSlice","initialState","reducers","extraReducers","fulfilled","state","action","payload","pending","dataAdapter","createEntityAdapter","getInitialState","useSkyviewer","filters","flipFilter","idx","setUseSkyviewer","selectBatch","order","findKey","batch","max","n_cands","progressCursor","direction","forward","N","deleteBatch","omit","keyBy","cand","selectedBatch","authPersistConfig","storage","blacklist","persistConfig","version","rootReducer","combineReducers","auth","reducer","persistReducer","persistedReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","connect","List","ListItemText","primary","ListItemSecondaryAction","Switch","edge","checked","paper","gap","display","flexDirection","justifyContent","flex","container","Box","alignItems","minWidth","width","mr","LinearProgress","sum","ListItem","button","Checkbox","ButtonGroup","style","startIcon","ImportExport","timestamp","Date","getMilliseconds","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","Settings","grades","card","paddingLeft","height","loadCands","nextUngraded","listRef","createRef","isItemLoaded","useEffect","current","scrollToItem","Divider","itemCount","minimumBatchSize","loadMoreItems","onItemsRendered","ref","itemSize","r","layout","index","selected","src","filename","alt","dim","img","Image","image","offsetX","offsetY","onContextMenu","preventDefault","source","x","y","radius","stroke","lens","content","palette","background","default","mixins","toolbar","minHeight","leftContainer","rightContainer","lensDataContainer","overflowY","metricContainer","imgListContainer","maxWidth","marginRight","submitComment","snackbarOpen","setSnackbarOpen","onKeyPress","includes","parseInt","tabIndex","multiline","onKeyPressCapture","stopPropagation","endIcon","Snackbar","autoHideDuration","elevation","severity","drawerWidth","root","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","flexGrow","contentShift","useTheme","setUploadOpen","AppBar","clsx","Toolbar","Drawer","anchor","ListItemIcon","subheader","ListSubheader","values","secondary","upload_time","toLocaleString","App","CookiesProvider","loading","CssBaseline","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"+eAWe,SAASA,EAAYC,GAAQ,IACjCC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,QAD0B,EAEXC,IAAMC,SAAS,IAFJ,mBAEhCC,EAFgC,KAExBC,EAFwB,OAGVH,IAAMC,SAAS,IAHL,mBAGhCG,EAHgC,KAGtBC,EAHsB,KAIjCC,EAAQ,WACmB,IAAzBJ,EAAOK,OAAOC,OACdH,EAAS,yBAETN,EAAQG,IAGhB,OACI,8BACI,eAACO,EAAA,EAAD,CAAQX,KAAMA,EAAMY,kBAAgB,oBAApC,UACI,cAACC,EAAA,EAAD,CAAaC,GAAG,oBAAhB,oBACA,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,yDAGA,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACPL,GAAG,UACHM,MAAM,UACNC,KAAK,OACLC,WAAS,EACTC,MAAOnB,EACPoB,SAAU,SAAAC,GAAG,OAAIpB,EAAUoB,EAAIC,OAAOH,QACtCI,MAAOC,QAAQtB,GACfuB,UAAW,SAAAC,GACW,KAAdA,EAAEC,SAAgBvB,KAE1BwB,WAAY1B,OAEpB,cAAC2B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,QAAS3B,EAAO4B,MAAM,UAA9B,0B,+BC1CLC,E,OAAAA,EAAMC,OAAO,CACxBC,QAF8C,GAG9CC,iBAAiB,ICQfC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,WAAY,CACRC,gBAAiB,UACjBC,QAASH,EAAMI,QAAQ,IAE3BC,eAAgB,CAEZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,IAEjBC,QAAS,CACLL,SAAU,gBAIH,SAASM,EAAaxD,GACjC,IAAMyD,EAAUf,IACTgB,EAA2B1D,EAA3B0D,WAAYC,EAAe3D,EAAf2D,YAFqB,EAGRxD,IAAMC,UAAS,GAHP,mBAGjCwD,EAHiC,KAGvBC,EAHuB,KAKxC,OAAO,cAACjD,EAAA,EAAD,CAAQX,KAAMyD,EAAYI,QAASH,EAAnC,SACH,cAAC,IAAD,CAAUI,OAAQ,OAAlB,SACK,YAAmD,IAAjDC,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cAC5B,OACI,qCACI,cAACpD,EAAA,EAAD,6BACA,cAACE,EAAA,EAAD,UACI,8BACI,gDAASgD,EAAa,CAACG,UAAWV,EAAQZ,cAA1C,cACI,qCAAWoB,MACVC,EAAcvD,OAAS,EACpBuD,EAAcE,KAAI,SAAAC,GAAI,OAClB,+BACKA,EAAKC,KADV,OACoBD,EAAKE,KAAO,KAASC,QAAQ,GADjD,QAASH,EAAKC,SAIlB,cAACG,EAAA,EAAD,CAAYC,QAAQ,QAApB,gDAIhB,eAACxC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQE,MAAM,UAAUD,QAASuB,EAAjC,oBAGA,sBAAKQ,UAAWV,EAAQF,QAAxB,UACI,cAACpB,EAAA,EAAD,CAAQE,MAAM,UACNsC,SAAUf,EACVxB,QAAS,WACL,IAAMwC,EAAW,IAAIC,SACrBX,EAAcY,SAAQ,SAACT,GAAD,OAAUO,EAASG,OAAOV,EAAKW,KAAMX,MAC3DR,GAAY,GACZvB,EAAM2C,KAAK,kBAAmBL,EAAU,CACpCM,QAAS,CACL,eAAgB,uBAEpBzC,iBAAiB,IAClB0C,MAAK,WACJtB,GAAY,GACZF,OACDyB,OAAM,WACLvB,GAAY,OAf5B,oBAoBCD,GAAY,cAACyB,EAAA,EAAD,CAAkBd,KAAM,GAAIJ,UAAWV,EAAQR,+B,6IC7E7E,SAASqC,GAAStF,GAAQ,IAC9BuF,EAAavF,EAAbuF,UAD6B,EAEZpF,IAAMC,UAAS,GAFH,mBAE7BH,EAF6B,KAEvBuF,EAFuB,KAIpC,OAAO,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACH,eAACC,GAAA,EAAD,CAAOrB,KAAK,QAAZ,UACI,cAACsB,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,4CACX,cAACA,GAAA,EAAD,UAAW,6CAGnB,eAACC,GAAA,EAAD,WACI,eAACF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWL,UAAU,KAAKO,MAAM,MAAhC,gBACA,cAACF,GAAA,EAAD,UAAYR,EAAUW,GAAG1B,QAAQ,QAErC,eAACsB,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWL,UAAU,KAAKO,MAAM,MAAhC,iBACA,cAACF,GAAA,EAAD,UAAYR,EAAUY,IAAI3B,QAAQ,QAEtC,eAACsB,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWL,UAAU,KAAKO,MAAM,MAAhC,mBACA,cAACF,GAAA,EAAD,UAAYR,EAAUa,WAE1B,eAACN,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWL,UAAU,KAAKO,MAAM,MAAhC,iBACA,cAACF,GAAA,EAAD,UAAW,mBAAGM,KAAMd,EAAUe,UAAW3E,OAAO,SAClC4E,IAAI,sBADP,4BAGf,eAACT,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWL,UAAU,KAAKO,MAAM,MAAhC,wBACA,cAACF,GAAA,EAAD,UACI,cAACS,EAAA,EAAD,CAAYC,aAAW,aAAalC,KAAK,QAAQnC,QAAS,kBAAMoD,GAASvF,IAAzE,SAAiFA,EAC7E,cAAC,KAAD,IAAyB,cAAC,KAAD,WAGpCA,GAAQyG,OAAOC,QAAQC,KAAKC,MAAMtB,EAAUuB,aAAa1C,KAAI,WAAa2C,GAAb,uBAAEC,EAAF,KAAOC,EAAP,YAC1D,eAACnB,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWL,UAAU,KAAKO,MAAM,MAAhC,SAAuCe,IACvC,cAACjB,GAAA,EAAD,UAAYkB,MAFDF,c,0LC9BtBtG,GAAQyG,aACjB,aADiC,yCAEjC,WAAO7G,EAAQ8G,GAAf,gBAAAC,EAAA,sEACsB9E,EAAM2C,KAAK,SAAU,CAAC,QAAW5E,IADvD,cACUgH,EADV,OAEIF,EAASG,SAASC,MAFtB,kBAGW,CAAClH,OAAQgH,EAAIG,KAAKC,QAAUpH,EAAS,OAHhD,2CAFiC,yDASxBqH,GAASR,aAClB,cADkC,yCAElC,WAAOS,EAAGR,GAAV,gBAAAC,EAAA,sEACsB9E,EAAM2C,KAAK,WADjC,OACUoC,EADV,OAEIO,QAAQC,IAAIR,GAFhB,2CAFkC,yDAQzBE,GAAeL,aACxB,oBADwC,yCAExC,WAAOS,EAAGR,GAAV,gBAAAC,EAAA,sEACsB9E,EAAMwF,IAAI,YADhC,cACUT,EADV,yBAEW,CAACU,QAASV,EAAIG,KAAKO,UAF9B,2CAFwC,yDAQ/BC,GAAcd,aACvB,mBADuC,yCAEvC,WAAOS,EAAGR,GAAV,kBAAAC,EAAA,6DACUa,EAAUd,EAASe,WAAT,KAA4BC,gBADhD,SAEsB7F,EAAMwF,IAAI,UAAW,CAACM,OAAQ,CAACC,SAAUJ,KAF/D,cAEUZ,EAFV,yBAGW,CAACiB,OAAQjB,EAAIG,KAAKc,SAH7B,2CAFuC,yDAS9BC,GAAarB,aACtB,uBADsC,yCAEtC,aAAsBC,GAAtB,sBAAAC,EAAA,6DAAQoB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACXb,QAAQC,IAAIW,EAAOC,GACbR,EAAUd,EAASe,WAAT,KAA4BC,gBAFhD,SAGsB7F,EAAMwF,IAAI,cAAe,CACvCM,OAAQ,CAACI,MAAOA,EAAOC,KAAMA,EAAMJ,SAAUJ,KAJrD,cAGUZ,EAHV,yBAMW,CAACqB,WAAYrB,EAAIG,KAAKkB,aANjC,2CAFsC,yDAY7BC,GAAczB,aACvB,mBADuC,yCAEvC,WAAOS,EAAGR,GAAV,kBAAAC,EAAA,6DACUa,EAAUd,EAASe,WAAT,KAA4BC,gBADhD,SAEsB7F,EAAMwF,IAAI,eAAgB,CAACM,OAAQ,CAACC,SAAUJ,KAFpE,cAEUZ,EAFV,yBAGW,CAACuB,OAAQvB,EAAIG,KAAKoB,SAH7B,2CAFuC,yDAS9BC,GAAW3B,aACpB,gBADoC,yCAEpC,aAAoBC,GAApB,sBAAAC,EAAA,6DAAQrG,EAAR,EAAQA,GAAIqF,EAAZ,EAAYA,MACF0C,EAAaC,KAAKC,IAAI7B,EAASe,WAAT,KAA4BI,OAAS,GACjEnB,EAASG,SAAS2B,GAAUC,QAAQC,UAAU,CAACb,OAAQQ,KAF3D,SAIsBxG,EAAM2C,KAAK,cAAe,CAAClE,KAAIqF,UAJrD,OAIUiB,EAJV,OAKIF,EAASG,SAAS2B,GAAUC,QAAQE,UAAU,CAACR,OAAQvB,EAAIG,KAAKoB,UAChEzB,EAASG,SAAS2B,GAAUC,QAAQG,gBAAgB,CAACtI,KAAIqF,WAN7D,2CAFoC,yDAY3BkD,GAAapC,aACtB,kBADsC,yCAEtC,aAAsBC,GAAtB,kBAAAC,EAAA,6DAAQrG,EAAR,EAAQA,GAAIwI,EAAZ,EAAYA,QAAZ,SACUjH,EAAM2C,KAAK,cAAe,CAAClE,KAAIwI,YADzC,OAEIpC,EAASG,SAAS2B,GAAUC,QAAQG,gBAAgB,CAACtI,KAAIwI,aAF7D,2CAFsC,yDAQ7BC,GAAUtC,aACnB,eADmC,yCAEnC,aAA+BC,GAA/B,sBAAAC,EAAA,6DAAQrG,EAAR,EAAQA,GAAIO,EAAZ,EAAYA,KAAMmI,EAAlB,EAAkBA,WAAlB,SACsBnH,EAAM2C,KAAK,QAAS,CAAClE,KAAIO,OAAMmI,eADrD,OACUpC,EADV,OAEIF,EAASG,SAAS2B,GAAUC,QAAQG,gBAAlB,aAAmCtI,MAAOsG,EAAIG,KAAJ,aAFhE,2CAFmC,yDAQ1BkC,GAAaxC,aACtB,kBADsC,yCAEtC,aAAaC,GAAb,kBAAAC,EAAA,6DAAQrG,EAAR,EAAQA,GAAR,SACsBuB,EAAMqH,OAAO,QAAS,CAACnC,KAAM,CAACzG,QADpD,OACUsG,EADV,OAEIF,EAASG,SAAS2B,GAAUC,QAAQG,gBAAlB,aAAmCtI,MAAOsG,EAAIG,KAAJ,aAFhE,2CAFsC,yDAQpCoC,GAAYC,aAAY,CAC1B7E,KAAM,OACN8E,aAAc,CACVzJ,OAAQ,MAEZ0J,SAAU,GACVC,eAAa,qBACRvJ,GAAMwJ,WAAY,SAACC,EAAOC,GACvBD,EAAM7J,OAAS8J,EAAOC,QAAQ/J,UAFzB,eAIRqH,GAAO2C,SAAU,SAACH,EAAOC,GACtBD,EAAM7J,OAAS,QALV,MAUXiK,GAAcC,eAEPtB,GAAYY,aAAY,CACjC7E,KAAM,OACN8E,aAAcQ,GAAYE,gBAAgB,CACtCrC,gBAAiB,KACjBsC,cAAc,EACd1C,QAAS,GACTO,OAAQ,KACRM,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GACrB8B,QAAS,EAAC,GAAO,GAAO,GAAO,GAAO,KAE1CX,SAAU,CACNY,WAAY,SAACT,EAAOC,GAChBD,EAAMQ,QAAQP,EAAOC,QAAQQ,MAAQV,EAAMQ,QAAQP,EAAOC,QAAQQ,MAEtEC,gBAAiB,SAACX,EAAOC,GACrBD,EAAMO,aAAeN,EAAOC,QAAQK,cAExCK,YAAa,SAACZ,EAAOC,GACbD,EAAMjC,UAAYkC,EAAOC,QAAQnC,UACjCiC,EAAM/B,gBAAkBgC,EAAOC,QAAQnC,QACvCiC,EAAM5B,OAAS,KACf4B,EAAMxB,WAAa,GACnBwB,EAAMtB,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,KAGpCS,gBAAiB,SAACa,EAAOC,GACrB,IAAMY,EAAQpD,KAAEqD,QAAQd,EAAMxB,YAAY,SAAAuC,GAAK,OAAIA,EAAMlK,KAAOoJ,EAAOC,QAAQrJ,MAC/EmJ,EAAMxB,WAAWqC,GAAjB,2BAA8Bb,EAAMxB,WAAWqC,IAAWZ,EAAOC,UAErEjB,UAAW,SAACe,EAAOC,GACfD,EAAM5B,OAASS,KAAKC,IAAID,KAAKmC,IAAIf,EAAOC,QAAQ9B,OAAQ,GAAI4B,EAAMnC,QAAQmC,EAAM/B,iBAAiBgD,QAAU,IAE/GC,eAAgB,SAAClB,EAAOC,GAIpB,IAHA,IAAMkB,EAAYlB,EAAOC,QAAQkB,QAAU,GAAK,EAC5CV,EAAMV,EAAM5B,OAAS+C,EACnBE,EAAIrB,EAAMnC,QAAQmC,EAAM/B,iBAAiBgD,QACxC,GAAKP,GAAOA,EAAMW,GAAKrB,EAAMQ,QAAQR,EAAMxB,WAAWkC,GAAKxE,MAAQ,IAAsC,OAAhC8D,EAAMxB,WAAWkC,GAAKxE,OAClGwE,GAAOS,EAEXnB,EAAM5B,OAASS,KAAKC,IAAID,KAAKmC,IAAIN,EAAK,GAAIW,EAAI,IAElDnC,UAAW,SAACc,EAAOC,GACfD,EAAMtB,OAASuB,EAAOC,QAAQxB,QAElC4C,YAAa,SAACtB,EAAOC,GACjBD,EAAMnC,QAAUJ,KAAE8D,KAAKvB,EAAMnC,QAAS,CAACoC,EAAOC,QAAQnC,UACtDiC,EAAM/B,gBAAkB,OAGhC6B,eAAa,qBACRzC,GAAa0C,WAAY,SAACC,EAAOC,GAC9BD,EAAMnC,QAAUJ,KAAE+D,MAAMvB,EAAOC,QAAQrC,QAAS,OAAS,MAFpD,eAIRC,GAAYiC,WAAY,SAACC,EAAOC,GAC7BD,EAAM5B,OAAS6B,EAAOC,QAAQ9B,UALzB,eAORC,GAAW0B,WAAY,SAACC,EAAOC,GAC5BA,EAAOC,QAAQ1B,WAAW5D,SAAQ,SAAA6G,GAC9BzB,EAAMxB,WAAWiD,EAAKZ,OAASY,QAT9B,eAYRhD,GAAYsB,WAAY,SAACC,EAAOC,GAC7BD,EAAMtB,OAASuB,EAAOC,QAAQxB,UAbzB,eAeRlB,GAAOuC,WAAY,SAAAC,GAAK,MAAK,CAC1B/B,gBAAiB,KACjBJ,QAAS,GACTW,WAAY,GACZJ,OAAQ,KACRM,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GACrB8B,QAAS,EAAC,GAAO,GAAO,GAAO,GAAO,GACtCD,cAAc,MAtBT,MA2BJmB,GAAgB,SAAA1B,GAAK,OAAIA,EAAM1C,KAAKO,QAAQmC,EAAM1C,KAAKW,kBAE9D0D,GAAoB,CACtB7E,IAAK,OACL8E,QAASA,KACTC,UAAW,CAAC,eAGVC,GAAgB,CAClBhF,IAAK,OACLiF,QAAS,EACTH,cAGEI,GAAcC,aAAgB,CAChCC,KAAMxC,GAAUyC,QAChB7E,KAAM8E,aAAeT,GAAmB5C,GAAUoD,WAEhDE,GAAmBD,aAAeN,GAAeE,IAE1CM,GAAQC,aAAe,CAChCJ,QAASE,GACTG,WAAYC,aAAqB,CAC7BC,kBAAmB,CACfC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,WAKzDC,GAAYC,aAAab,I,SCjMvBc,qBAAQ,SAAApD,GAAK,MAAK,CAACO,aAAcP,EAAM1C,KAAKiD,gBAAgB,CACvEI,gBAAiB5B,GAAUC,QAAQ2B,iBADxByC,EAnBf,SAAwBtN,GAAQ,IACrBC,EAAqBD,EAArBC,KAAM0D,EAAe3D,EAAf2D,YACb,OAAO,eAAC/C,EAAA,EAAD,CAAQX,KAAMA,EAAM6D,QAASH,EAA7B,UACH,cAAC7C,EAAA,EAAD,uBACA,eAACE,EAAA,EAAD,iGAEI,eAACuM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAcC,QAAQ,kBACtB,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAQC,KAAK,MACLnM,SAAU,WAAOzB,EAAM6K,gBAAgB,CAACJ,cAAezK,EAAMyK,gBAC7DoD,QAAS7N,EAAMyK,oBAG/B,cAACtI,EAAA,EAAD,CAAQE,MAAM,YAAd,mCCPNK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCkL,MAAO,CACH/K,QAASH,EAAMI,QAAQ,GACvB+K,IAAI,GAAD,OAAKnL,EAAMI,QAAQ,GAAnB,MACHgL,QAAS,OACTC,cAAe,SACfC,eAAgB,eAChBC,KAAM,GAEVC,UAAW,CACPD,KAAM,EACNH,QAAS,OACTC,cAAe,cA2DRX,qBAAQ,SAAApD,GAAK,MAAK,CAACQ,QAASR,EAAM1C,KAAKkD,WAAW,CAACC,WAAY1B,GAAUC,QAAQyB,YAAjF2C,EAvDf,SAAuBtN,GACnB,IAAMyD,EAAUf,KACTuI,EAAiBjL,EAAjBiL,MAAOrC,EAAU5I,EAAV4I,OAFY,EAGFzI,IAAMC,UAAS,GAHb,mBAGnBH,EAHmB,KAGbuF,EAHa,KAI1B,OAAO,sBAAKrB,UAAWV,EAAQ2K,UAAxB,UACH,eAACzI,EAAA,EAAD,CAAOxB,UAAWV,EAAQqK,MAA1B,UACI,eAACrJ,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAA+B,4BAAIuG,EAAMjG,OAAzC,cACA,eAACqJ,GAAA,EAAD,CAAKL,QAAQ,OAAOM,WAAW,SAA/B,UACI,cAACD,GAAA,EAAD,CAAKE,SAAS,QAAd,SACI,cAAC9J,EAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,gBAAlC,kCAEJ,cAACgM,GAAA,EAAD,CAAKG,MAAM,OAAOC,GAAI,EAAtB,SACI,cAACC,GAAA,EAAD,CAAgBhK,QAAQ,cAAclD,MAAOmG,KAAEgH,IAAI/F,GAAUqC,EAAME,QAAU,QAEjF,cAACkD,GAAA,EAAD,UACI,eAAC5J,EAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,gBAAlC,UAAmDsF,KAAEgH,IAAI/F,GAAzD,IAAmEqC,EAAME,gBAGjF,cAACoC,EAAA,EAAD,UACK,CAAC,IAAK,IAAK,IAAK,IAAK,cAAcnJ,KAAI,SAAC/C,EAAO0F,GAAR,OACpC,eAAC6H,EAAA,EAAD,CAAkBC,QAAM,EAACzM,QAAS,WAAOpC,EAAM2K,WAAW,CAACC,IAAK7D,KAAhE,UACI,cAACyG,EAAA,EAAD,CAAcC,QAAO,UAAKpM,EAAL,aAAeuH,EAAO7B,GAAtB,cAA8B6B,EAAO7B,GAAKkE,EAAME,QAAU,KAAK3G,QAAQ,GAAvE,QACrB,cAACkJ,GAAA,EAAD,UACI,cAACoB,GAAA,EAAD,CAAUlB,KAAK,MACLnM,SAAU,WAAOzB,EAAM2K,WAAW,CAACC,IAAK7D,KACxC8G,SAAS7N,EAAM0K,UAAW1K,EAAM0K,QAAQ3D,SAL3CA,QAUvB,eAACgI,GAAA,EAAD,CAAa1M,MAAM,UAAnB,UACI,cAACF,EAAA,EAAD,CAAQ6M,MAAO,CAAC,MAAS,QACjBC,UAAW,cAACC,GAAA,EAAD,IACX9M,QAAS,WACLE,EAAMwF,IAAI,gBAAiB,CACvBM,OAAQ,CAACC,SAAU4C,EAAMlK,GAAIoO,WAAW,IAAIC,MAAOC,mBACnD5M,iBAAiB,EACjB6M,aAAc,SACfnK,MAAK,SAAAkC,GACJ,IAAMkI,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACtI,EAAIG,QAC/CoI,EAAOC,SAASC,cAAc,KACpCF,EAAKvJ,KAAOkJ,EACZK,EAAKG,aAAa,WAAlB,UAAiC9E,EAAMjG,KAAvC,SACA6K,SAASG,KAAKC,YAAYL,GAC1BA,EAAKM,YAbrB,2BAgBA,cAAC/N,EAAA,EAAD,CAAQ6M,MAAO,CAAC,MAAS,QAASC,UAAW,cAACkB,GAAA,EAAD,IACrC/N,QAAS,kBAAMoD,GAAQ,IAD/B,4BAIR,cAAC,GAAD,CAAgBvF,KAAMA,EAAM0D,YAAa,kBAAM6B,GAAQ,Y,8BCjFzD4K,GAAS,CAAC,UAAW,UAAW,UAAW,UAAW,YACtD1N,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCyN,KAAM,CACFrC,QAAS,OACTC,cAAe,MACflL,QAAQ,GAAD,OAAKH,EAAMI,QAAQ,GAAnB,MACPsN,YAAY,GAAD,OAAK1N,EAAMI,QAAQ,GAAnB,MACXsL,WAAY,SACZJ,eAAgB,iBAEpBE,UAAW,CACPmC,OAAQ,OACRvC,QAAS,OACTC,cAAe,cA4DRX,qBAAQ,SAAApD,GAAK,MAAK,CAACO,aAAcP,EAAM1C,KAAKiD,gBAA5C6C,EAxDf,SAAkBtN,GAAQ,IACf0I,EAA+E1I,EAA/E0I,WAAY+B,EAAmEzK,EAAnEyK,aAAcQ,EAAqDjL,EAArDiL,MAAOuF,EAA8CxQ,EAA9CwQ,UAAWlI,EAAmCtI,EAAnCsI,OAAQa,EAA2BnJ,EAA3BmJ,UAAWsH,EAAgBzQ,EAAhByQ,aAChEhN,EAAUf,KACVgO,EAAUvQ,IAAMwQ,YAChBC,EAAe,SAAA7J,GAAC,OAAIlF,QAAQ6G,EAAW3B,KAI7C,OAHA5G,IAAM0Q,WAAU,WACRH,EAAQI,SAAWxI,GAAU,GAAGoI,EAAQI,QAAQC,aAAazI,EAAQ,YAC1E,CAACA,IACG,eAAC3C,EAAA,EAAD,CAAOxB,UAAWV,EAAQ2K,UAA1B,UACH,cAACjM,EAAA,EAAD,CAAQ6M,MAAO,CAACR,MAAO,OAAQL,KAAM,GAAI/L,QAASqO,EAAlD,2BACA,cAACO,EAAA,EAAD,IACA,qBAAKhC,MAAO,CAACb,KAAM,GAAnB,SACI,cAAC,KAAD,UACK,gBAAEoC,EAAF,EAAEA,OAAQ/B,EAAV,EAAUA,MAAV,OAAqB,cAAC,KAAD,CAAgBoC,aAAcA,EACdK,UAAWhG,EAAME,QACjB+F,iBAAkB,GAClBC,cAAe,SAAC3I,EAAOC,GAAR,OAAiB+H,EAAU,CAAChI,QAAOC,UAHlE,SAIjB,gBAAE2I,EAAF,EAAEA,gBAAiBC,EAAnB,EAAmBA,IAAnB,OACG,cAAC,KAAD,CAAed,OAAQA,EAAQ/B,MAAOA,EAAO8C,SAAU,IAAKL,UAAWhG,EAAME,QAC9DkG,IAAK,SAACE,GACEA,IACAF,EAAIE,GACJb,EAAQI,QAAUS,IAEvBH,gBAAiBA,EAAiBI,OAAO,WAN3D,SAOK,YAAwB,IAAfzK,EAAc,EAArB0K,MAAUzC,EAAW,EAAXA,MACT,OAAO,eAACJ,EAAA,EAAD,CAAkBI,MAAOA,EAAO7K,UAAWV,EAAQ4M,KAAMxB,QAAM,EACrD6C,SAAU3K,IAAMuB,EAAQlG,QAAS,kBAAM+G,EAAU,CAACb,OAAQvB,KADpE,UAEH,8BACK6J,EAAa7J,GAAK,qCACf,eAACtC,EAAA,EAAD,CAAYC,QAAQ,QAApB,mBACWgE,EAAW3B,GAAGgE,SAEzB,cAACtG,EAAA,EAAD,CAAYC,QAAQ,QACRsK,MAAO,CAAC3M,MAAOqG,EAAW3B,GAAGX,MAAQ,QAAU,OAD3D,SAEKsC,EAAW3B,GAAGX,MAAQgK,GAAO1H,EAAW3B,GAAGX,MAAQ,GAAK,gBAE3D,cAAC3B,EAAA,EAAD,CAAYC,QAAQ,QAApB,0BAITkM,EAAa7J,IAAM,qBAAK4K,IAAKlH,EAAe/B,EAAW3B,GAAGT,UAAYoC,EAAW3B,GAAG6K,SAAU5C,MAAO,CAACuB,OAAQ,QACtFsB,IAAI,mBAhBX9K,oB,mBCXvCuG,qBAAQ,SAAApD,GAAK,MAAK,CAACO,aAAcP,EAAM1C,KAAKiD,gBAAgB,CACvEf,cACAF,YAFW8D,EAlCf,SAAmBtN,GAAQ,IAChByK,EAAwCzK,EAAxCyK,aAAcqG,EAA0B9Q,EAA1B8Q,QAAStC,EAAiBxO,EAAjBwO,MAAO+B,EAAUvQ,EAAVuQ,OAC/BoB,EAAMlH,EAAeqG,EAAQxK,UAAYwK,EAAQc,SACjDE,EAAM/I,KAAKC,IAAIwF,EAAO+B,GACtBwB,EAAM,IAAIvC,OAAOwC,MAIvB,OAHAD,EAAIJ,IAAMA,EACVI,EAAIxB,OAASuB,EACbC,EAAIvD,MAAQsD,EACL,sBAAK9C,MAAO,CAACuB,OAAQ,OAAQvC,QAAS,OAAQM,WAAY,SAAUL,cAAe,UAAnF,UACH,eAAC,SAAD,CAAOO,MAAOsD,EAAKvB,OAAQuB,EACpB9C,MAAO,CACHhB,QAAS,OACTE,eAAgB,SAChBqC,OAAQ,OACR/B,MAAO,OACPF,WAAY,UANvB,UAQI,cAAC,SAAD,UACI,cAAC,SAAD,CAAO2D,MAAOF,EAAK3P,QAAS,SAACV,GACzB1B,EAAMwJ,QAAQ,CAACzI,GAAI+P,EAAQ/P,GAAIO,KAAM,SAAUmI,WAAY,CAAC/H,EAAIA,IAAIwQ,QAAUJ,EAAKpQ,EAAIA,IAAIyQ,QAAUL,MACtGM,cAAe,SAAC1Q,GACfA,EAAIA,IAAI2Q,iBACRrS,EAAMwJ,QAAQ,CAACzI,GAAI+P,EAAQ/P,GAAIO,KAAM,OAAQmI,WAAY,CAAC/H,EAAIA,IAAIwQ,QAAUJ,EAAKpQ,EAAIA,IAAIyQ,QAAUL,UAG3G,eAAC,SAAD,WACKhB,EAAQwB,QAAUxB,EAAQwB,OAAOlO,KAAI,WAAQ2C,GAAR,uBAAEwL,EAAF,KAAIC,EAAJ,YAAc,cAAC,UAAD,CAAgBD,EAAGT,EAAMS,EAAGC,EAAGV,EAAMU,EAAGC,OAAQX,EAAM,GAAIY,OAAO,OAApD3L,MAChE+J,EAAQ6B,MAAgC,IAAxB7B,EAAQ6B,KAAKhS,QAAgB,cAAC,UAAD,CAAQ4R,EAAGT,EAAMhB,EAAQ6B,KAAK,GAAIH,EAAGV,EAAMhB,EAAQ6B,KAAK,GAAIF,OAAQX,EAAM,GAAIY,OAAO,gBAG3I,cAACvQ,EAAA,EAAD,CAAQ6M,MAAO,CAACR,MAAO,QAASjK,KAAK,QAAQG,QAAQ,WAAWtC,QAAS,kBAAMpC,EAAM0J,WAAW,CAAC3I,GAAG+P,EAAQ/P,MAA5G,yBCzBF2B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCgQ,QAAS,CACL5E,QAAS,OACTC,cAAe,MACfnL,gBAAiBF,EAAMiQ,QAAQC,WAAWC,QAC1CxC,OAAO,gBAAD,OAAkB3N,EAAMoQ,OAAOC,QAAQC,UAAvC,kBAA0DtQ,EAAMI,QAAQ,GAAxE,OACN+K,IAAI,GAAD,OAAKnL,EAAMI,QAAQ,GAAnB,OAEPmQ,cAAe,CACXnF,QAAS,OACTG,KAAM,EACNJ,IAAI,GAAD,OAAKnL,EAAMI,QAAQ,GAAnB,MACHiL,cAAe,UAEnBmF,eAAgB,CACZpF,QAAS,OACTG,KAAM,EACNJ,IAAI,GAAD,OAAKnL,EAAMI,QAAQ,GAAnB,MACHiL,cAAe,UAEnBoF,kBAAmB,CACfC,UAAW,QAEfC,gBAAiB,CACbvF,QAAS,OACTG,KAAM,GAEVqF,iBAAkB,CACdrF,KAAM,GACNH,QAAS,OACTD,IAAI,GAAD,OAAKnL,EAAMI,QAAQ,GAAnB,OAEP8K,MAAO,CACHyC,OAAQ,OACRkD,SAAU,OACV1Q,QAASH,EAAMI,QAAQ,GACvB+K,IAAI,GAAD,OAAKnL,EAAMI,QAAQ,GAAnB,OAEP+O,IAAK,CACDxB,OAAQ,OACRkD,SAAU,OACVzF,QAAS,QACT1K,WAAY,OACZoQ,YAAa,QAEjB7E,OAAQ,CACJzN,OAAQwB,EAAMI,QAAQ,QAiFfsK,qBAAQ,SAAApD,GAAK,MAAK,CAC7B0B,cAAeA,GAAc1B,GAC7B5B,OAAQ4B,EAAM1C,KAAKc,OACnBI,WAAYwB,EAAM1C,KAAKkB,WACvBE,OAAQsB,EAAM1C,KAAKoB,UACnB,CACAL,cACAP,eACAW,eACAQ,UAAWF,GAAUC,QAAQC,UAC7BE,gBAAiBJ,GAAUC,QAAQG,gBACnCR,YACAuC,eAAgBnC,GAAUC,QAAQkC,eAClC9B,eAbWgE,EA7Ef,SAAiBtN,GACb,IAAMyD,EAAUf,KACMuI,EAA2IjL,EAA1J4L,cAAsBrD,EAAoIvI,EAApIuI,WAAYP,EAAwHhI,EAAxHgI,YAAaW,EAA2G3I,EAA3G2I,YAAaL,EAA8FtI,EAA9FsI,OAAQa,EAAsFnJ,EAAtFmJ,UAAWiC,EAA2EpL,EAA3EoL,eAAgB1C,EAA2D1I,EAA3D0I,WAAYG,EAA+C7I,EAA/C6I,SAAUD,EAAqC5I,EAArC4I,OAAoB+K,EAAiB3T,EAA7BsJ,WAFhH,EAIUnJ,IAAMC,SAAS,IAJzB,mBAIbmJ,EAJa,KAIJD,EAJI,OAKoBnJ,IAAMC,UAAS,GALnC,mBAKbwT,EALa,KAKCC,EALD,KAOpB1T,IAAM0Q,WAAU,WACZ7I,IACAW,MACD,CAACsC,EAAMlK,GAAI4H,EAAaX,IAC3B,IAAM8I,EAAUpI,EAAWJ,GAI3B,OAHAnI,IAAM0Q,WAAU,WACRC,GAASxH,EAAWwH,EAAQvH,WACjC,CAACuH,IACG,sBAAK3M,UAAWV,EAAQmP,QAASkB,WAAY,SAAA/R,GAC5C,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKgS,SAAShS,EAAEiF,KACrC6B,EAAS,CAAC9H,GAAI+P,EAAQ/P,GAAIqF,MAAO4N,SAASjS,EAAEiF,OAC3B,MAAVjF,EAAEiF,IACToE,EAAe,CAACE,SAAS,IACR,MAAVvJ,EAAEiF,KACToE,EAAe,CAACE,SAAS,KAE9B2I,SAAS,IARL,UASH,sBAAK9P,UAAWV,EAAQ0P,cAAxB,UACI,qBAAKhP,UAAWV,EAAQ4P,kBAAxB,SACI,eAAC1N,EAAA,EAAD,CAAOxB,UAAWV,EAAQqK,MAAOkB,MAAO,CAACuB,OAAQ,QAAjD,UACI,cAAC9L,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACCoM,EAAU,cAACxL,GAAD,CAAUC,UAAWuL,IAAa,cAACrM,EAAA,EAAD,8BAGrD,qBAAKN,UAAWV,EAAQ8P,gBAAxB,SACI,cAAC,GAAD,CAAetI,MAAOA,EAAOrC,OAAQA,SAG7C,sBAAKzE,UAAWV,EAAQ2P,eAAxB,UACI,sBAAKjP,UAAWV,EAAQ+P,iBAAxB,UACI,qBAAKxE,MAAO,CAACb,KAAM,GAAnB,SACI,cAACxI,EAAA,EAAD,CAAOxB,UAAWV,EAAQqK,MAA1B,SACKgD,EAAU,cAAC,GAAD,CAAWA,QAASA,EAAStC,MAAO,IAAK+B,OAAQ,MACxD,cAAC9L,EAAA,EAAD,6BAGZ,qBAAKuK,MAAO,CAACb,KAAM,GAAnB,SACI,cAAC,GAAD,CAAUzF,WAAYA,EAAYuC,MAAOA,EAAOuF,UAAWjI,EAAYD,OAAQA,EACrEa,UAAWA,EAAWsH,aAAczI,SAGtD,8BACI,eAACrC,EAAA,EAAD,CAAOxB,UAAWV,EAAQqK,MAAOkB,MAAO,CAAChB,QAAS,QAAlD,UACI,cAAC9M,EAAA,EAAD,CAAWG,MAAM,WACN6S,WAAS,EACT3S,WAAS,EACTC,MAAO+H,EACP4K,kBAAmB,SAAApS,GAAC,OAAIA,EAAEqS,mBAC1B3S,SAAU,SAAAM,GACNuH,EAAWvH,EAAEJ,OAAOH,OACpBO,EAAEqS,qBAEjB,cAACjS,EAAA,EAAD,CAAQuC,QAAQ,YACRrC,MAAM,UACN8B,UAAWV,EAAQoL,OACnBzM,QAAS,WACLuR,EAAc,CAAC5S,GAAI+P,EAAQ/P,GAAIwI,aAGnC8K,QAAS,cAAC,IAAD,IAPjB,qBAQA,cAACC,EAAA,EAAD,CAAUrU,KAAM2T,EAAcW,iBAAkB,IAAMzQ,QAAS,kBAAM+P,GAAgB,IAArF,SACI,cAAC,KAAD,CAAUW,UAAW,EAAG9P,QAAQ,SAASZ,QAAS,kBAAM+P,GAAgB,IAC9DY,SAAS,UADnB,gDCrGlBC,GAAc,IAEdhS,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+R,KAAM,CACF3G,QAAS,OACTQ,MAAO,QAEXoG,OAAQ,CACJC,WAAYjS,EAAMkS,YAAYvS,OAAO,CAAC,SAAU,SAAU,CACtDwS,OAAQnS,EAAMkS,YAAYC,OAAOC,MACjCC,SAAUrS,EAAMkS,YAAYG,SAASC,iBAG7CC,YAAa,CACT3G,MAAM,eAAD,OAAiBkG,GAAjB,OACLpR,WAAYoR,GACZG,WAAYjS,EAAMkS,YAAYvS,OAAO,CAAC,SAAU,SAAU,CACtDwS,OAAQnS,EAAMkS,YAAYC,OAAOK,QACjCH,SAAUrS,EAAMkS,YAAYG,SAASI,kBAG7CC,WAAY,CACR5B,YAAa9Q,EAAMI,QAAQ,IAE/BuS,KAAM,CACFvH,QAAS,QAEbwH,OAAQ,CACJhH,MAAOkG,GACPe,WAAY,GAEhBC,YAAa,CACTlH,MAAOkG,IAEXiB,aAAa,yBACT3H,QAAS,OACTM,WAAY,SACZvL,QAASH,EAAMI,QAAQ,EAAG,IACvBJ,EAAMoQ,OAAOC,SAJR,IAKR/E,eAAgB,aAEpB0E,QAAS,CACLgD,SAAU,EACV7S,QAASH,EAAMI,QAAQ,GACvB6R,WAAYjS,EAAMkS,YAAYvS,OAAO,SAAU,CAC3CwS,OAAQnS,EAAMkS,YAAYC,OAAOC,MACjCC,SAAUrS,EAAMkS,YAAYG,SAASC,gBAEzC5R,YAAY,KAEhBuS,aAAc,CACVhB,WAAYjS,EAAMkS,YAAYvS,OAAO,SAAU,CAC3CwS,OAAQnS,EAAMkS,YAAYC,OAAOK,QACjCH,SAAUrS,EAAMkS,YAAYG,SAASI,iBAEzC/R,WAAY,OA8FLgK,qBAAQ,SAAApD,GAAK,MAAK,CAC7B0B,cAAeA,GAAc1B,GAC7BnC,QAASmC,EAAM1C,KAAKO,QACpB1H,OAAQ6J,EAAMkC,KAAK/L,OACnB8H,gBAAiB+B,EAAM1C,KAAKW,mBAC5B,CACAZ,gBACAG,UACAoD,YAAa7B,GAAUC,QAAQ4B,YAC/BrK,UATW6M,EA1Ff,SAActN,GACV,IAAMyD,EAAUf,KACVE,EAAQkT,cAFG,EAGO3V,IAAMC,UAAS,GAHtB,mBAGVH,EAHU,KAGJuF,EAHI,OAImBrF,IAAMC,UAAS,GAJlC,mBAIVsD,EAJU,KAIEqS,EAJF,KAKVnK,EAA6F5L,EAA7F4L,cAAerE,EAA8EvH,EAA9EuH,aAAcG,EAAgE1H,EAAhE0H,OAAQK,EAAwD/H,EAAxD+H,QAAS1H,EAA+CL,EAA/CK,OAAQyK,EAAuC9K,EAAvC8K,YAAarK,EAA0BT,EAA1BS,MAAO0H,EAAmBnI,EAAnBmI,gBAIjF,OAHAhI,IAAM0Q,WAAU,WACZtJ,MACD,CAACA,IAEA,sBAAKpD,UAAWV,EAAQkR,KAAxB,UACI,cAAC5U,EAAD,CAAaE,MAAO4B,QAAQxB,GAASH,QAASO,IAC9C,cAAC+C,EAAD,CAAcE,WAAYA,EAAYC,YAAa,WAC/CoS,GAAc,GACdxO,OAGJ,cAACyO,EAAA,EAAD,CAAQ9S,SAAS,QACTiB,UAAW8R,YAAKxS,EAAQmR,OAAT,eACVnR,EAAQ0R,YAAclV,IAFnC,SAII,eAACiW,EAAA,EAAD,WACI,cAAC1P,EAAA,EAAD,CACInE,MAAM,UACNoE,aAAW,cACXrE,QAAS,kBAAMoD,GAAQ,IACvBoI,KAAK,QACLzJ,UAAW8R,YAAKxS,EAAQ6R,WAAYrV,GAAQwD,EAAQ8R,MALxD,SAOI,cAAC,IAAD,MAEJ,eAAC9Q,EAAA,EAAD,CAAYC,QAAQ,KAAKsK,MAAO,CAAC4G,SAAU,GAA3C,6BACqBvV,KAEpBA,GACD,cAAC8B,EAAA,EAAD,CAAQE,MAAM,UAAUqC,QAAQ,WAAWtC,QAASsF,EAApD,yBAGR,eAACyO,EAAA,EAAD,CAAQhS,UAAWV,EAAQ+R,OACnB9Q,QAAQ,aACR0R,OAAO,OACPnW,KAAMA,EACNwD,QAAS,CACLqK,MAAOrK,EAAQiS,aAL3B,UAOI,sBAAKvR,UAAWV,EAAQkS,aAAxB,UACI,cAAClR,EAAA,EAAD,CAAYC,QAAQ,QAApB,sBACA,cAAC8B,EAAA,EAAD,CAAYpE,QAAS,kBAAMoD,GAAQ,IAAnC,SACyB,QAApB5C,EAAMyI,UAAsB,cAAC,IAAD,IAAqB,cAAC,IAAD,SAG1D,cAAC2F,EAAA,EAAD,IACA,cAACzD,EAAA,EAAD,UACI,eAACqB,EAAA,EAAD,CAAUC,QAAM,EAACzM,QAAS,kBAAM2T,GAAc,IAA9C,UACI,cAACM,EAAA,EAAD,UAAc,cAAC,IAAD,MACd,cAAC7I,EAAA,EAAD,CAAcC,QAAQ,gBAG9B,cAACuD,EAAA,EAAD,IACA,cAACzD,EAAA,EAAD,CAAM+I,UACF,cAACC,EAAA,EAAD,sBADJ,SAKK7P,OAAO8P,OAAOzO,GAAS3D,KAAI,SAAA6G,GAAK,OAC7B,cAAC2D,EAAA,EAAD,CAAUC,QAAM,EAAgBzM,QAAS,WACrC0I,EAAY,CAAC7C,QAASgD,EAAMlK,MAEtB2Q,SAAUvJ,IAAoB8C,EAAMlK,GAH9C,SAII,cAACyM,EAAA,EAAD,CAAcC,QAASxC,EAAMjG,KAAMyR,UAC/B,+CACYxL,EAAME,QADlB,IAC2B,uBAD3B,YAEe,IAAIiE,KAAKA,KAAKvI,MAAMoE,EAAMyL,cAAeC,eAAe,eAPzD1L,EAAMlK,YAcxC,uBAAMoD,UAAW8R,YAAKxS,EAAQmP,QAAT,eAChBnP,EAAQoS,aAAe5V,IAD5B,UAGI,qBAAKkE,UAAWV,EAAQkS,eACvB/J,GAAiBvL,EAAS,cAAC,GAAD,IACvB,cAACoE,EAAA,EAAD,+C,UCnKL,SAASmS,KACpB,OAAO,cAACC,EAAA,EAAD,UACH,cAAC,KAAD,CAAUrK,MAAOA,GAAjB,SACI,eAAC,KAAD,CAAasK,QAAS,KAAM1J,UAAWA,GAAvC,UACI,cAAC2J,EAAA,EAAD,IACA,cAAC,GAAD,WCDIlV,QACa,cAA7B2N,OAAOwH,SAASC,UAEa,UAA7BzH,OAAOwH,SAASC,UAEhBzH,OAAOwH,SAASC,SAASC,MACrB,2DCZRC,IAASC,OAAO,cAACR,GAAD,IAAQ/G,SAASwH,eAAe,SD6HxC,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBrS,MAAK,SAAAsS,GACFA,EAAaC,gBAEhBtS,OAAM,SAAAxD,GACHgG,QAAQhG,MAAMA,EAAM+V,c","file":"static/js/main.0936512d.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField\n} from '@material-ui/core';\n\nexport default function LoginDialog(props) {\n    const {open, onLogin} = props\n    const [userId, setUserId] = React.useState('')\n    const [errorMsg, setError] = React.useState(\"\")\n    const login = () => {\n        if (userId.trim().length === 0) {\n            setError(\"Enter a valid user ID\")\n        } else {\n            onLogin(userId)\n        }\n    }\n    return (\n        <div>\n            <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Log in</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Log in with a user id to save your batches\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"user_id\"\n                        label=\"User ID\"\n                        type=\"text\"\n                        fullWidth\n                        value={userId}\n                        onChange={evt => setUserId(evt.target.value)}\n                        error={Boolean(errorMsg)}\n                        onKeyDown={e => {\n                            if (e.keyCode === 13) login()\n                        }}\n                        helperText={errorMsg}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={login} color=\"primary\">\n                        Login\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import axios from 'axios'\n\nconst isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\nconst baseURL = isDev ? \"http://localhost:5000\" : \"\"\nexport default axios.create({\n    baseURL: baseURL,\n    withCredentials: true\n});","import Dropzone from \"react-dropzone\";\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    makeStyles,\n    Typography\n} from \"@material-ui/core\";\nimport axios from \"./axios\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    fileUpload: {\n        backgroundColor: '#f1f1f1',\n        padding: theme.spacing(3)\n    },\n    buttonProgress: {\n        // color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    wrapper: {\n        position: 'relative'\n    }\n}))\n\nexport default function UploadDialog(props) {\n    const classes = useStyles();\n    const {uploadOpen, handleClose} = props;\n    const [inFlight, setInFlight] = React.useState(false);\n\n    return <Dialog open={uploadOpen} onClose={handleClose}>\n        <Dropzone accept={'.csv'}>\n            {({getRootProps, getInputProps, acceptedFiles}) => {\n                return (\n                    <>\n                        <DialogTitle>Upload batches</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <div {...getRootProps({className: classes.fileUpload})}>\n                                    <input {...getInputProps()} />\n                                    {acceptedFiles.length > 0 ?\n                                        acceptedFiles.map(file => (\n                                            <li key={file.path}>\n                                                {file.path} - {(file.size / 1000000).toFixed(2)} Mb\n                                            </li>\n                                        )) :\n                                        <Typography variant='body2'>Click to upload your .csvs</Typography>}\n                                </div>\n                            </div>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button color=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                            <div className={classes.wrapper}>\n                                <Button color=\"primary\"\n                                        disabled={inFlight}\n                                        onClick={() => {\n                                            const formData = new FormData();\n                                            acceptedFiles.forEach((file) => formData.append(file.name, file))\n                                            setInFlight(true)\n                                            axios.post('/upload-batches', formData, {\n                                                headers: {\n                                                    'Content-Type': 'multipart/form-data'\n                                                },\n                                                withCredentials: true\n                                            }).then(() => {\n                                                setInFlight(false)\n                                                handleClose()\n                                            }).catch(() => {\n                                                setInFlight(false)\n                                            })\n                                        }}>\n                                    Upload\n                                </Button>\n                                {inFlight && <CircularProgress size={24} className={classes.buttonProgress}/>}\n                            </div>\n                        </DialogActions>\n                    </>\n                );\n            }}\n        </Dropzone>\n\n    </Dialog>\n}","import React from 'react'\nimport {IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nexport default function LensData(props) {\n    const {candidate} = props;\n    const [open, setOpen] = React.useState(false);\n\n    return <TableContainer component={Paper}>\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                    <TableCell><b>Parameter</b></TableCell>\n                    <TableCell><b>Value</b></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">RA</TableCell>\n                    <TableCell>{candidate.ra.toFixed(5)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">DEC</TableCell>\n                    <TableCell>{candidate.dec.toFixed(5)}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">Grade</TableCell>\n                    <TableCell>{candidate.grade}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">URL</TableCell>\n                    <TableCell><a href={candidate.skyviewer} target='_blank'\n                                  rel=\"noopener noreferrer\">Skyviewer</a></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">Additional</TableCell>\n                    <TableCell>\n                        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>{open ?\n                            <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}</IconButton>\n                    </TableCell>\n                </TableRow>\n                {open && Object.entries(JSON.parse(candidate.additional)).map(([key, val], i) =>\n                    <TableRow key={i}>\n                        <TableCell component=\"th\" scope=\"row\">{key}</TableCell>\n                        <TableCell>{val}</TableCell>\n                    </TableRow>\n                )}\n\n            </TableBody>\n        </Table>\n    </TableContainer>\n}","import {\n    combineReducers,\n    configureStore,\n    createAsyncThunk,\n    createEntityAdapter,\n    createSlice,\n    getDefaultMiddleware\n} from \"@reduxjs/toolkit\";\nimport axios from '../axios'\nimport _ from 'lodash'\nimport {FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (userId, thunkAPI) => {\n        const res = await axios.post(\"/login\", {\"user_id\": userId})\n        thunkAPI.dispatch(fetchBatches())\n        return {userId: res.data.success ? userId : null}\n    }\n)\n\nexport const logout = createAsyncThunk(\n    'auth/logout',\n    async (_, thunkAPI) => {\n        const res = await axios.post(\"/logout\")\n        console.log(res)\n    }\n)\n\nexport const fetchBatches = createAsyncThunk(\n    'data/fetchBatches',\n    async (_, thunkAPI) => {\n        const res = await axios.get('/batches')\n        return {batches: res.data.batches}\n    }\n)\n\nexport const fetchCursor = createAsyncThunk(\n    'data/fetchCursor',\n    async (_, thunkAPI) => {\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/cursor\", {params: {batch_id: batchId}})\n        return {cursor: res.data.cursor}\n    }\n)\n\nexport const fetchCands = createAsyncThunk(\n    'data/fetchCandidates',\n    async ({start, stop}, thunkAPI) => {\n        console.log(start, stop)\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/candidates\", {\n            params: {start: start, stop: stop, batch_id: batchId}\n        })\n        return {candidates: res.data.candidates}\n    }\n)\n\nexport const fetchCounts = createAsyncThunk(\n    'data/fetchCounts',\n    async (_, thunkAPI) => {\n        const batchId = thunkAPI.getState()['data'].selectedBatchId\n        const res = await axios.get(\"/batch_stats\", {params: {batch_id: batchId}})\n        return {counts: res.data.counts}\n    }\n)\n\nexport const setGrade = createAsyncThunk(\n    'data/setGrade',\n    async ({id, grade}, thunkAPI) => {\n        const nextCursor = Math.min(thunkAPI.getState()['data'].cursor + 1)\n        thunkAPI.dispatch(dataSlice.actions.setCursor({cursor: nextCursor}))\n\n        const res = await axios.post(\"/candidates\", {id, grade})\n        thunkAPI.dispatch(dataSlice.actions.setCounts({counts: res.data.counts}))\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, grade}))\n    }\n)\n\nexport const setComment = createAsyncThunk(\n    'data/setComment',\n    async ({id, comment}, thunkAPI) => {\n        await axios.post(\"/candidates\", {id, comment})\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, comment}))\n    }\n)\n\nexport const setMark = createAsyncThunk(\n    'data/setMark',\n    async ({id, type, coordinate}, thunkAPI) => {\n        const res = await axios.post(\"/mark\", {id, type, coordinate})\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, ...res.data['candidate']}))\n    }\n)\n\nexport const clearMarks = createAsyncThunk(\n    'data/clearMarks',\n    async ({id}, thunkAPI) => {\n        const res = await axios.delete(\"/mark\", {data: {id}})\n        thunkAPI.dispatch(dataSlice.actions.updateCandidate({id, ...res.data['candidate']}))\n    }\n)\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        userId: null\n    },\n    reducers: {},\n    extraReducers: {\n        [login.fulfilled]: (state, action) => {\n            state.userId = action.payload.userId\n        },\n        [logout.pending]: (state, action) => {\n            state.userId = null\n        }\n    }\n})\n\nconst dataAdapter = createEntityAdapter()\n\nexport const dataSlice = createSlice({\n    name: 'data',\n    initialState: dataAdapter.getInitialState({\n        selectedBatchId: null,\n        useSkyviewer: true,\n        batches: {},\n        cursor: null,\n        counts: [0, 0, 0, 0, 0],\n        filters: [false, false, false, false, false]\n    }),\n    reducers: {\n        flipFilter: (state, action) => {\n            state.filters[action.payload.idx] = !state.filters[action.payload.idx]\n        },\n        setUseSkyviewer: (state, action) => {\n            state.useSkyviewer = action.payload.useSkyviewer;\n        },\n        selectBatch: (state, action) => {\n            if (state.batchId !== action.payload.batchId) {\n                state.selectedBatchId = action.payload.batchId\n                state.cursor = null\n                state.candidates = {}\n                state.counts = [0, 0, 0, 0, 0]\n            }\n        },\n        updateCandidate: (state, action) => {\n            const order = _.findKey(state.candidates, batch => batch.id === action.payload.id)\n            state.candidates[order] = {...state.candidates[order], ...action.payload}\n        },\n        setCursor: (state, action) => {\n            state.cursor = Math.min(Math.max(action.payload.cursor, 0), state.batches[state.selectedBatchId].n_cands - 1)\n        },\n        progressCursor: (state, action) => {\n            const direction = action.payload.forward ? 1 : -1;\n            let idx = state.cursor + direction;\n            const N = state.batches[state.selectedBatchId].n_cands;\n            while (0 <= idx && idx < N && state.filters[state.candidates[idx].grade - 1] && state.candidates[idx].grade !== null) {\n                idx += direction;\n            }\n            state.cursor = Math.min(Math.max(idx, 0), N - 1);\n        },\n        setCounts: (state, action) => {\n            state.counts = action.payload.counts\n        },\n        deleteBatch: (state, action) => {\n            state.batches = _.omit(state.batches, [action.payload.batchId])\n            state.selectedBatchId = null\n        },\n    },\n    extraReducers: {\n        [fetchBatches.fulfilled]: (state, action) => {\n            state.batches = _.keyBy(action.payload.batches, 'id') || {}\n        },\n        [fetchCursor.fulfilled]: (state, action) => {\n            state.cursor = action.payload.cursor\n        },\n        [fetchCands.fulfilled]: (state, action) => {\n            action.payload.candidates.forEach(cand => {\n                state.candidates[cand.order] = cand\n            })\n        },\n        [fetchCounts.fulfilled]: (state, action) => {\n            state.counts = action.payload.counts\n        },\n        [logout.fulfilled]: state => ({\n            selectedBatchId: null,\n            batches: [],\n            candidates: {},\n            cursor: null,\n            counts: [0, 0, 0, 0, 0],\n            filters: [false, false, false, false, false],\n            useSkyviewer: true\n        })\n    }\n})\n\nexport const selectedBatch = state => state.data.batches[state.data.selectedBatchId]\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage: storage,\n    blacklist: ['candidates']\n}\n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage\n}\n\nconst rootReducer = combineReducers({\n    auth: authSlice.reducer,\n    data: persistReducer(authPersistConfig, dataSlice.reducer)\n})\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }\n    })\n})\n\nexport const persistor = persistStore(store)","import React from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    ListItemSecondaryAction,\n    ListItemText,\n    Switch,\n    List\n} from \"@material-ui/core\";\nimport {dataSlice} from \"./redux\";\nimport {connect} from \"react-redux\";\n\n\nfunction SettingsDialog(props) {\n    const {open, handleClose} = props;\n    return <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n            Configuring inspection settings for current batch. TODO: custom keybindings, delete\n            <List>\n                <ListItemText primary=\"Use Skyviewer\"/>\n                <ListItemSecondaryAction>\n                    <Switch edge=\"end\"\n                            onChange={() => {props.setUseSkyviewer({useSkyviewer: !props.useSkyviewer})}}\n                            checked={props.useSkyviewer}/>\n                </ListItemSecondaryAction>\n            </List>\n            <Button color='secondary'>Delete (WIP)</Button>\n        </DialogContent>\n    </Dialog>\n}\n\nexport default connect(state => ({useSkyviewer: state.data.useSkyviewer}), {\n    setUseSkyviewer: dataSlice.actions.setUseSkyviewer\n})(SettingsDialog)","import {\n    Box,\n    Button,\n    ButtonGroup,\n    Checkbox,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport {ImportExport as ImportExportIcon, Settings as SettingsIcon} from '@material-ui/icons';\nimport React from \"react\";\nimport _ from \"lodash\";\nimport axios from './axios'\nimport SettingsDialog from \"./SettingsDialog\";\nimport {connect} from \"react-redux\";\nimport {dataSlice} from \"./redux\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        gap: `${theme.spacing(1)}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        flex: 1\n    },\n    container: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}))\n\nfunction ProgressPanel(props) {\n    const classes = useStyles()\n    const {batch, counts} = props\n    const [open, setOpen] = React.useState(false);\n    return <div className={classes.container}>\n        <Paper className={classes.paper}>\n            <Typography variant='h6'>Batch <i>{batch.name}</i> metrics</Typography>\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box minWidth='125px'>\n                    <Typography variant=\"body2\" color=\"textSecondary\">Grading progress: </Typography>\n                </Box>\n                <Box width=\"100%\" mr={1}>\n                    <LinearProgress variant=\"determinate\" value={_.sum(counts) / batch.n_cands * 100}/>\n                </Box>\n                <Box>\n                    <Typography variant=\"body2\" color=\"textSecondary\">{_.sum(counts)}/{batch.n_cands}</Typography>\n                </Box>\n            </Box>\n            <List>\n                {['A', 'B', 'C', 'D', 'Non-lenses'].map((label, i) =>\n                    <ListItem key={i} button onClick={() => {props.flipFilter({idx: i})}}>\n                        <ListItemText primary={`${label}: ${counts[i]} (${(counts[i] / batch.n_cands * 100).toFixed(2)}%)`}/>\n                        <ListItemSecondaryAction>\n                            <Checkbox edge=\"end\"\n                                      onChange={() => {props.flipFilter({idx: i})}}\n                                      checked={props.filters ? !props.filters[i] : true}/>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                )}\n            </List>\n            <ButtonGroup color=\"primary\">\n                <Button style={{'width': '100%'}}\n                        startIcon={<ImportExportIcon/>}\n                        onClick={() => {\n                            axios.get(\"/export_batch\", {\n                                params: {batch_id: batch.id, timestamp: new Date().getMilliseconds()},\n                                withCredentials: true,\n                                responseType: 'blob'\n                            }).then(res => {\n                                const url = window.URL.createObjectURL(new Blob([res.data]));\n                                const link = document.createElement('a');\n                                link.href = url;\n                                link.setAttribute('download', `${batch.name}.csv`); //or any other extension\n                                document.body.appendChild(link);\n                                link.click();\n                            })\n                        }}>Export to CSV</Button>\n                <Button style={{'width': '100%'}} startIcon={<SettingsIcon/>}\n                        onClick={() => setOpen(true)}>Settings</Button>\n            </ButtonGroup>\n        </Paper>\n        <SettingsDialog open={open} handleClose={() => setOpen(false)}/>\n    </div>\n}\n\nexport default connect(state => ({filters: state.data.filters}), {flipFilter: dataSlice.actions.flipFilter})(ProgressPanel)","import AutoSizer from \"react-virtualized-auto-sizer\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport {FixedSizeList} from \"react-window\";\nimport {Button, Divider, ListItem, makeStyles, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {connect} from \"react-redux\";\n\nconst grades = ['Grade A', 'Grade B', 'Grade C', 'Grade D', 'Non lens']\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing(1)}px`,\n        paddingLeft: `${theme.spacing(2)}px`,\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    container: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}))\n\nfunction LensList(props) {\n    const {candidates, useSkyviewer, batch, loadCands, cursor, setCursor, nextUngraded} = props;\n    const classes = useStyles()\n    const listRef = React.createRef()\n    const isItemLoaded = i => Boolean(candidates[i])\n    React.useEffect(() => {\n        if (listRef.current && cursor >= 0) listRef.current.scrollToItem(cursor, 'center')\n    }, [cursor])\n    return <Paper className={classes.container}>\n        <Button style={{width: '100%', flex: 0}} onClick={nextUngraded}>Next Ungraded</Button>\n        <Divider/>\n        <div style={{flex: 1}}>\n            <AutoSizer>\n                {({height, width}) => <InfiniteLoader isItemLoaded={isItemLoaded}\n                                                      itemCount={batch.n_cands}\n                                                      minimumBatchSize={20}\n                                                      loadMoreItems={(start, stop) => loadCands({start, stop})}>\n                    {({onItemsRendered, ref}) => (\n                        <FixedSizeList height={height} width={width} itemSize={100} itemCount={batch.n_cands}\n                                       ref={(r) => {\n                                           if (r) {\n                                               ref(r)\n                                               listRef.current = r\n                                           }\n                                       }} onItemsRendered={onItemsRendered} layout=\"vertical\">\n                            {({index: i, style}) => {\n                                return <ListItem key={i} style={style} className={classes.card} button\n                                                 selected={i === cursor} onClick={() => setCursor({cursor: i})}>\n                                    <div>\n                                        {isItemLoaded(i) ? <>\n                                            <Typography variant=\"body1\">\n                                                Cand #{candidates[i].order}\n                                            </Typography>\n                                            <Typography variant=\"body1\"\n                                                        style={{color: candidates[i].grade ? 'green' : 'red'}}>\n                                                {candidates[i].grade ? grades[candidates[i].grade - 1] : 'Ungraded'}\n                                            </Typography>\n                                        </> : <Typography variant=\"body1\">Loading...</Typography>\n                                        }\n\n                                    </div>\n                                    {isItemLoaded(i) && <img src={useSkyviewer ? candidates[i].skyviewer : candidates[i].filename} style={{height: '100%'}}\n                                                             alt='Lens preview'/>}\n                                </ListItem>\n                            }}\n                        </FixedSizeList>\n                    )}\n\n                </InfiniteLoader>\n                }\n\n            </AutoSizer>\n        </div>\n    </Paper>\n}\n\nexport default connect(state => ({useSkyviewer: state.data.useSkyviewer}))(LensList)","import React from \"react\";\nimport {Circle, Image, Layer, Stage} from \"react-konva\";\nimport {Button} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {clearMarks, setMark} from \"./redux\";\n\nfunction LensImage(props) {\n    const {useSkyviewer, current, width, height} = props;\n    const src = useSkyviewer ? current.skyviewer : current.filename;\n    const dim = Math.min(width, height);\n    const img = new window.Image();\n    img.src = src;\n    img.height = dim;\n    img.width = dim;\n    return <div style={{height: \"100%\", display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n        <Stage width={dim} height={dim}\n               style={{\n                   display: 'flex',\n                   justifyContent: 'center',\n                   height: '100%',\n                   width: '100%',\n                   alignItems: 'center'\n               }}>\n            <Layer>\n                <Image image={img} onClick={(evt) => {\n                    props.setMark({id: current.id, type: 'source', coordinate: [evt.evt.offsetX / dim, evt.evt.offsetY / dim]})\n                }} onContextMenu={(evt) => {\n                    evt.evt.preventDefault()\n                    props.setMark({id: current.id, type: 'lens', coordinate: [evt.evt.offsetX / dim, evt.evt.offsetY / dim]})\n                }}/>\n            </Layer>\n            <Layer>\n                {current.source && current.source.map(([x,y], i) => <Circle key={i} x={dim * x} y={dim * y} radius={dim / 20} stroke='red'/>)}\n                {current.lens && current.lens.length === 2 && <Circle x={dim * current.lens[0]} y={dim * current.lens[1]} radius={dim / 20} stroke='white'/>}\n            </Layer>\n        </Stage>\n        <Button style={{width: '100%'}} size=\"large\" variant=\"outlined\" onClick={() => props.clearMarks({id:current.id})}>Clear</Button>\n    </div>\n}\n\nexport default connect(state => ({useSkyviewer: state.data.useSkyviewer}), {\n    clearMarks,\n    setMark\n})(LensImage)","import React from \"react\";\nimport {Button, makeStyles, Paper, Snackbar, TextField, Typography} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport LensData from \"./LensData\";\nimport ProgressPanel from \"./ProgressPanel\";\nimport LensList from \"./LensList\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {connect} from \"react-redux\";\nimport {dataSlice, fetchCands, fetchCounts, fetchCursor, selectedBatch, setComment, setGrade} from \"./redux\";\nimport LensImage from \"./LensImage\";\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        display: 'flex',\n        flexDirection: 'row',\n        backgroundColor: theme.palette.background.default,\n        height: `calc(100vh - ${theme.mixins.toolbar.minHeight}px - 3*${theme.spacing(3)}px)`,\n        gap: `${theme.spacing(2)}px`\n    },\n    leftContainer: {\n        display: 'flex',\n        flex: 4,\n        gap: `${theme.spacing(2)}px`,\n        flexDirection: 'column'\n    },\n    rightContainer: {\n        display: 'flex',\n        flex: 8,\n        gap: `${theme.spacing(2)}px`,\n        flexDirection: 'column'\n    },\n    lensDataContainer: {\n        overflowY: 'auto'\n    },\n    metricContainer: {\n        display: 'flex',\n        flex: 4\n    },\n    imgListContainer: {\n        flex: 11,\n        display: 'flex',\n        gap: `${theme.spacing(1)}px`\n    },\n    paper: {\n        height: '100%',\n        maxWidth: '100%',\n        padding: theme.spacing(3),\n        gap: `${theme.spacing(1)}px`\n    },\n    img: {\n        height: '100%',\n        maxWidth: '100%',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n}))\n\nfunction Grading(props) {\n    const classes = useStyles()\n    const {selectedBatch: batch, fetchCands, fetchCursor, fetchCounts, cursor, setCursor, progressCursor, candidates, setGrade, counts, setComment: submitComment} = props\n\n    const [comment, setComment] = React.useState('')\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false)\n\n    React.useEffect(() => {\n        fetchCursor()\n        fetchCounts()\n    }, [batch.id, fetchCounts, fetchCursor])\n    const current = candidates[cursor]\n    React.useEffect(() => {\n        if (current) setComment(current.comment)\n    }, [current])\n    return <div className={classes.content} onKeyPress={e => {\n        if ([\"1\", \"2\", \"3\", \"4\", \"5\"].includes(e.key)) {\n            setGrade({id: current.id, grade: parseInt(e.key)})\n        } else if (e.key === \"b\") {\n            progressCursor({forward: false})\n        } else if (e.key === \"n\") {\n            progressCursor({forward: true})\n        }\n    }} tabIndex='0'>\n        <div className={classes.leftContainer}>\n            <div className={classes.lensDataContainer}>\n                <Paper className={classes.paper} style={{height: 'auto'}}>\n                    <Typography variant='h6'>Lens Data</Typography>\n                    {current ? <LensData candidate={current}/> : <Typography>Loading...</Typography>}\n                </Paper>\n            </div>\n            <div className={classes.metricContainer}>\n                <ProgressPanel batch={batch} counts={counts}/>\n            </div>\n        </div>\n        <div className={classes.rightContainer}>\n            <div className={classes.imgListContainer}>\n                <div style={{flex: 9}}>\n                    <Paper className={classes.paper}>\n                        {current ? <LensImage current={current} width={500} height={500}/> :\n                            <Typography>Loading...</Typography>}\n                    </Paper>\n                </div>\n                <div style={{flex: 3}}>\n                    <LensList candidates={candidates} batch={batch} loadCands={fetchCands} cursor={cursor}\n                              setCursor={setCursor} nextUngraded={fetchCursor}/>\n                </div>\n            </div>\n            <div>\n                <Paper className={classes.paper} style={{display: 'flex'}}>\n                    <TextField label=\"Comments\"\n                               multiline\n                               fullWidth\n                               value={comment}\n                               onKeyPressCapture={e => e.stopPropagation()}\n                               onChange={e => {\n                                   setComment(e.target.value)\n                                   e.stopPropagation()\n                               }}/>\n                    <Button variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => {\n                                submitComment({id: current.id, comment})\n                                // setSnackbarOpen(true)\n                            }}\n                            endIcon={<SendIcon/>}>Comment</Button>\n                    <Snackbar open={snackbarOpen} autoHideDuration={2000} onClose={() => setSnackbarOpen(false)}>\n                        <MuiAlert elevation={6} variant=\"filled\" onClose={() => setSnackbarOpen(false)}\n                                  severity=\"success\">Comment submitted!</MuiAlert>\n                    </Snackbar>\n                </Paper>\n            </div>\n        </div>\n    </div>\n}\n\nexport default connect(state => ({\n    selectedBatch: selectedBatch(state),\n    cursor: state.data.cursor,\n    candidates: state.data.candidates,\n    counts: state.data.counts\n}), {\n    fetchCands,\n    fetchCursor,\n    fetchCounts,\n    setCursor: dataSlice.actions.setCursor,\n    updateCandidate: dataSlice.actions.updateCandidate,\n    setGrade,\n    progressCursor: dataSlice.actions.progressCursor,\n    setComment\n})(Grading)","import React from 'react';\nimport clsx from 'clsx';\nimport {\n    AppBar,\n    Button,\n    Divider,\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    ListSubheader,\n    makeStyles,\n    Toolbar,\n    Typography,\n    useTheme\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport LoginDialog from \"./LoginDialog\";\nimport UploadDialog from \"./UploadDialog\";\nimport Grading from \"./Grading\";\nimport {connect} from \"react-redux\";\nimport {dataSlice, fetchBatches, login, logout, selectedBatch} from \"./redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        width: '100%'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nfunction Home(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n    const [uploadOpen, setUploadOpen] = React.useState(false)\n    const {selectedBatch, fetchBatches, logout, batches, userId, selectBatch, login, selectedBatchId} = props\n    React.useEffect(() => {\n        fetchBatches()\n    }, [fetchBatches])\n    return (\n        <div className={classes.root}>\n            <LoginDialog open={!Boolean(userId)} onLogin={login}/>\n            <UploadDialog uploadOpen={uploadOpen} handleClose={() => {\n                setUploadOpen(false)\n                fetchBatches()\n            }}/>\n\n            <AppBar position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() => setOpen(true)}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" style={{flexGrow: 1}}>\n                        Logged in user: {userId}\n                    </Typography>\n                    {userId &&\n                    <Button color='inherit' variant='outlined' onClick={logout}>Logout</Button>}\n                </Toolbar>\n            </AppBar>\n            <Drawer className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}>\n                <div className={classes.drawerHeader}>\n                    <Typography variant=\"body1\">Collapse</Typography>\n                    <IconButton onClick={() => setOpen(false)}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>\n                    <ListItem button onClick={() => setUploadOpen(true)}>\n                        <ListItemIcon><UploadIcon/></ListItemIcon>\n                        <ListItemText primary=\"Upload\"/>\n                    </ListItem>\n                </List>\n                <Divider/>\n                <List subheader={\n                    <ListSubheader>\n                        Batches\n                    </ListSubheader>\n                }>\n                    {Object.values(batches).map(batch =>\n                        <ListItem button key={batch.id} onClick={() => {\n                            selectBatch({batchId: batch.id})\n                        }}\n                                  selected={selectedBatchId === batch.id}>\n                            <ListItemText primary={batch.name} secondary={\n                                <>\n                                    Count: {batch.n_cands} <br/>\n                                    Created: {(new Date(Date.parse(batch.upload_time))).toLocaleString('en-GB')}\n                                </>\n                            }/>\n                        </ListItem>\n                    )}\n                </List>\n            </Drawer>\n            <main className={clsx(classes.content, {\n                [classes.contentShift]: open,\n            })}>\n                <div className={classes.drawerHeader}/>\n                {selectedBatch && userId ? <Grading/> :\n                    <Typography>Select a batch to grade</Typography>}\n            </main>\n        </div>\n    );\n}\n\nexport default connect(state => ({\n    selectedBatch: selectedBatch(state),\n    batches: state.data.batches,\n    userId: state.auth.userId,\n    selectedBatchId: state.data.selectedBatchId\n}), {\n    fetchBatches,\n    logout,\n    selectBatch: dataSlice.actions.selectBatch,\n    login\n})(Home)","import React from \"react\";\nimport {CookiesProvider} from \"react-cookie\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport Home from \"./Home\";\nimport {persistor, store} from './redux'\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from 'redux-persist/integration/react'\n\nexport default function App() {\n    return <CookiesProvider>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <CssBaseline/>\n                <Home/>\n            </PersistGate>\n        </Provider>\n    </CookiesProvider>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}